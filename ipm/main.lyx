#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{hyperref}
\hypersetup{
    colorlinks,
    allcolors=red
}
\usepackage[lined,boxed,ruled,norelsize,algo2e]{algorithm2e}
\@addtoreset{section}{part}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
theorems-ams-extended
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\defeq}{\stackrel{\mathrm{{\scriptscriptstyle def}}}{=}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\norm}[1]{\left\Vert #1\right\Vert }
\end_inset


\begin_inset FormulaMacro
\newcommand{\R}{\mathbb{R}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\Diag}{\mathrm{Diag}}
\end_inset

 
\begin_inset FormulaMacro
\newcommand{\Rn}{\mathbb{R}^{n}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\tr}{\mathrm{Tr}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\diag}{\mathrm{diag}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\rank}{\mathrm{rank}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\ma}{\mathbf{A}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\mx}{\mathbf{X}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\ms}{\mathbf{S}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\mproj}{\mathbf{P}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\mi}{\mathbf{I}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\mm}{\mathbf{M}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\mh}{\mathbf{H}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\mzero}{\mathbf{0}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\ml}{\mathbf{L}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\mb}{\mathbf{B}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\oma}{\overline{\ma}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\md}{\mathbf{D}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\mw}{\mathbf{W}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\omx}{\overline{\mathbf{X}}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\oms}{\overline{\mathbf{S}}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\ox}{\overline{x}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\os}{\overline{s}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\ttag}[1]{\tag{#1}}
{\qquad(#1)}
\end_inset


\begin_inset FormulaMacro
\newcommand{\PriR}{\mathcal{P}}
\end_inset

 
\begin_inset FormulaMacro
\newcommand{\DualR}{\mathcal{D}}
\end_inset

 
\end_layout

\begin_layout Title
Tutorial on the Robust Interior Point Method
\end_layout

\begin_layout Author
Yin Tat Lee
\begin_inset Foot
status open

\begin_layout Plain Layout
University of Washington & Microsoft Research.
 Email: yintat@uw.edu.
 Supported in part by NSF awards CCF-1749609, DMS-1839116, DMS-2023166,
 CCF-2105772, Microsoft Research Faculty Fellowship, Sloan Research Fellowship
 and Packard Fellowship.
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and 
\end_layout

\end_inset

Santosh S.
 Vempala
\begin_inset Foot
status open

\begin_layout Plain Layout
Georgia Tech.
 Email: vempala@gatech.edu.
 Supported in part by NSF awards DMS-1839323, CCF-1909756, CCF-2007443 and
 CCF-2106444.
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Abstract
We give a short, self-contained proof of the interior point method and its
 robust version.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Consider the primal linear program
\begin_inset Formula 
\begin{equation}
\min_{\ma x=b,x\in\R_{\geq0}^{n}}c^{\top}x\ttag P\label{eq:tut_primal_LP}
\end{equation}

\end_inset

and its dual
\begin_inset Formula 
\begin{equation}
\max_{\ma^{\top}y+s=c,s\in\R_{\geq0}^{n}}b^{\top}y\ttag D\label{eq:tut_dual_LP}
\end{equation}

\end_inset

where 
\begin_inset Formula $\ma\in\R^{d\times n}$
\end_inset

 and 
\begin_inset Formula $\R_{\geq0}=\{x\geq0\}$
\end_inset

.
 The feasible regions for the two programs are 
\begin_inset Formula 
\[
\PriR=\{x\in\R_{\geq0}^{n}:\ma x=b\}\mbox{ and }\DualR=\{s\in\R_{\geq0}^{n}:\ma^{\top}y+s=c\text{ for some }y\}.
\]

\end_inset

We define their interiors: 
\begin_inset Formula 
\[
\PriR^{\circ}=\{x\in\R_{>0}^{n}:\ma x=b\}\mbox{ and \DualR^{\circ}}=\{s\in\R_{>0}^{n}:\ma^{\top}y+s=c\text{ for some }y\}.
\]

\end_inset


\end_layout

\begin_layout Standard
To motivate the main idea of the interior point method, we recall the optimality
 condition for linear programs.
\end_layout

\begin_layout Theorem
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Complementary Slackness
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:comp_slackness"

\end_inset

Any 
\begin_inset Formula $x\in\PriR$
\end_inset

 and 
\begin_inset Formula $s\in\DualR$
\end_inset

 are optimal if and only if 
\begin_inset Formula $x^{\top}s=0$
\end_inset

.
 Moreover, if both 
\begin_inset Formula $\PriR$
\end_inset

 and 
\begin_inset Formula $\DualR$
\end_inset

 are non-empty, there exist 
\begin_inset Formula $x^{*}\in\PriR$
\end_inset

 and 
\begin_inset Formula $s^{*}\in\DualR$
\end_inset

 such that 
\begin_inset Formula $(x^{*})^{\top}s^{*}=0$
\end_inset

 and 
\begin_inset Formula $x^{*}+s^{*}>0$
\end_inset

.
\end_layout

\begin_layout Standard
More generally, the quantity 
\begin_inset Formula $x^{\top}s$
\end_inset

 measures the duality gap of the feasible solution:
\end_layout

\begin_layout Lemma
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Duality Gap
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lem:duality_gap"

\end_inset

For any 
\begin_inset Formula $x\in\PriR$
\end_inset

 and 
\begin_inset Formula $s\in\DualR$
\end_inset

, the duality gap 
\begin_inset Formula $c^{\top}x-b^{\top}y=x^{\top}s$
\end_inset

.
 In particular 
\begin_inset Formula $c^{\top}x\leq\min_{x\in\PriR}c^{\top}x+x^{\top}s$
\end_inset

.
\end_layout

\begin_layout Proof
Using 
\begin_inset Formula $\ma x=b$
\end_inset

 and 
\begin_inset Formula $\ma^{\top}y+s=c$
\end_inset

, we can compute the duality gap as follows
\begin_inset Formula 
\[
c^{\top}x-b^{\top}y=c^{\top}x-(\ma x)^{\top}y=c^{\top}x-x^{\top}(\ma y)=x^{\top}s.
\]

\end_inset

By weak duality, we have
\begin_inset Formula 
\[
c^{\top}x=b^{\top}y+x^{\top}s\leq\max_{\ma^{\top}y+s=c,s\in\R_{\geq0}^{n}}b^{\top}y+x^{\top}s\leq\min_{x\in\PriR}c^{\top}x+x^{\top}s.
\]

\end_inset


\end_layout

\begin_layout Standard
The main implication of Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:duality_gap"

\end_inset

 is that any feasible 
\begin_inset Formula $(x,s)$
\end_inset

 with small 
\begin_inset Formula $x^{\top}s$
\end_inset

 is a nearly optimal solution of the linear program.
 This leads us to primal-dual algorithms in which we start with a feasible
 primal-dual solution pair 
\begin_inset Formula $(x,s)$
\end_inset

 and iteratively update the solution to decrease the duality gap 
\begin_inset Formula $x^{\top}s$
\end_inset

.
 
\end_layout

\begin_layout Section
Interior Point Method
\end_layout

\begin_layout Standard
In this section, we discuss the classical short-step interior point method.
 For two vectors 
\begin_inset Formula $a,b$
\end_inset

, we use 
\begin_inset Formula $ab$
\end_inset

 to denote the vector with components 
\begin_inset Formula $(ab)_{i}=a_{i}b_{i}$
\end_inset

 and 
\begin_inset Formula $a/b$
\end_inset

 to denote the vector with components 
\begin_inset Formula $a_{i}/b_{i}$
\end_inset

.
 For a scalar 
\begin_inset Formula $t\in\R$
\end_inset

, we let 
\begin_inset Formula $t\mathbf{1}$
\end_inset

 denote the vector with all coordinates equal to 
\begin_inset Formula $t$
\end_inset

.
 
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:central_path"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Central Path
\end_layout

\end_inset

We define the central path 
\begin_inset Formula $(x_{t},s_{t})\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 by 
\begin_inset Formula $x_{t}s_{t}=t$
\end_inset

.
 We say 
\begin_inset Formula $x_{t}$
\end_inset

 is on the central path of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:tut_primal_LP"
plural "false"
caps "false"
noprefix "false"

\end_inset

 at 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Standard
The algorithm maintains a pair 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and a scalar 
\begin_inset Formula $t>0$
\end_inset

 satisfying the invariant 
\begin_inset Formula 
\[
\|\frac{xs}{t}-1\|_{2}\leq\frac{1}{4}.
\]

\end_inset

Note that the deviation from the central path is measured in 
\begin_inset Formula $\ell_{2}$
\end_inset

 norm.
 In each step, the algorithm decreases 
\begin_inset Formula $t$
\end_inset

 by a factor of 
\begin_inset Formula $1-\Omega(n^{-1/2})$
\end_inset

 while maintaining the invariant.
\end_layout

\begin_layout Subsection
Basic Property of a Step
\end_layout

\begin_layout Standard
To see why there is a pair 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 satisfying the invariant, we prove the following generalization.
\end_layout

\begin_layout Lemma
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Quadrant Representation of Primal-Dual
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lem:primal_dual_representation"

\end_inset

Suppose 
\begin_inset Formula $\PriR$
\end_inset

 is non-empty and bounded.
 For any positive vector 
\begin_inset Formula $\mu\in\R_{>0}^{n}$
\end_inset

, there is an unique pair 
\begin_inset Formula $(x_{\mu},s_{\mu})\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 such that 
\begin_inset Formula $x_{\mu}s_{\mu}=\mu$
\end_inset

.
 Furthermore, 
\begin_inset Formula $x_{\mu}=\min_{x\in\PriR}f_{\mu}(x)$
\end_inset

 where
\begin_inset Formula 
\[
f_{\mu}(x)=c^{\top}x-\sum_{i=1}^{n}\mu_{i}\ln x_{i}.
\]

\end_inset


\end_layout

\begin_layout Proof
Fix 
\begin_inset Formula $\mu\in\R_{>0}^{n}$
\end_inset

.
 We define 
\begin_inset Formula $x_{\mu}=\arg\min_{x\in\PriR}f_{\mu}(x)$
\end_inset

 and prove that 
\begin_inset Formula $(x_{\mu},s_{\mu})\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 with 
\begin_inset Formula $x_{\mu}s_{\mu}=\mu$
\end_inset

 for some 
\begin_inset Formula $s_{\mu}$
\end_inset

.
 Since 
\begin_inset Formula $\PriR$
\end_inset

 is non-empty and bounded and since 
\begin_inset Formula $f_{\mu}$
\end_inset

 is strictly convex, such an 
\begin_inset Formula $x_{\mu}$
\end_inset

 exists.
 Furthermore, since 
\begin_inset Formula $f_{\mu}(x)\rightarrow+\infty$
\end_inset

 as 
\begin_inset Formula $x_{i}\rightarrow0$
\end_inset

 for any 
\begin_inset Formula $i$
\end_inset

, we have that 
\begin_inset Formula $x_{\mu}\in\PriR^{\circ}$
\end_inset

.
\end_layout

\begin_layout Proof
By the KKT optimality condition for 
\begin_inset Formula $f_{\mu}$
\end_inset

, there is a vector 
\begin_inset Formula $y$
\end_inset

 such that
\begin_inset Formula 
\[
\nabla f_{\mu}(x)=c-\frac{\mu}{x}=\ma^{\top}y.
\]

\end_inset

Define 
\begin_inset Formula $s_{\mu}=\frac{\mu}{x_{\mu}}$
\end_inset

, then one can check that 
\begin_inset Formula $s_{\mu}\in\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $x_{\mu}s_{\mu}=\mu$
\end_inset

.
\end_layout

\begin_layout Proof
For the uniqueness, if 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $xs=\mu$
\end_inset

, then 
\begin_inset Formula $x$
\end_inset

 satisfies the optimality condition for 
\begin_inset Formula $f_{\mu}$
\end_inset

.
 Since 
\begin_inset Formula $f_{\mu}$
\end_inset

 is strictly convex, such 
\begin_inset Formula $x$
\end_inset

 must be unique.
\end_layout

\begin_layout Standard
Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:primal_dual_representation"

\end_inset

 shows that any point in 
\begin_inset Formula $\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 is uniquely represented by a positive vector 
\begin_inset Formula $\mu$
\end_inset

.
 Interior point methods move 
\begin_inset Formula $\mu$
\end_inset

 uniformly to 
\begin_inset Formula $0$
\end_inset

 while maintaining the corresponding 
\begin_inset Formula $x_{\mu}$
\end_inset

.
 Now we discuss how to find 
\begin_inset Formula $(x_{\mu},s_{\mu})$
\end_inset

 given a nearby interior feasible point 
\begin_inset Formula $(x,s)$
\end_inset

.
 Namely, how to move 
\begin_inset Formula $(x,s)$
\end_inset

 to 
\begin_inset Formula $(x+\delta_{x},s+\delta_{s})$
\end_inset

 such that it satisfies the equation
\begin_inset Formula 
\begin{align*}
(x+\delta_{x})(s+\delta_{s}) & =\mu,\\
\ma(x+\delta_{x}) & =b,\\
\ma^{\top}(y+\delta_{y})+(s+\delta_{s}) & =c,\\
(x+\delta_{x},s+\delta_{s}) & \in\R_{>0}^{2n}.
\end{align*}

\end_inset

Although the equation above involves 
\begin_inset Formula $y$
\end_inset

, our approximate solution does not need to know 
\begin_inset Formula $y$
\end_inset

.
 By ignoring the inequality constraint and the second-order term 
\begin_inset Formula $\delta_{x}\delta_{s}$
\end_inset

 in the first equation above, and using 
\begin_inset Formula $\ma x=b$
\end_inset

 and 
\begin_inset Formula $\ma^{\top}y+s=c$
\end_inset

 we can simplify the system:
\begin_inset Formula 
\begin{align}
xs+\ms\delta_{x}+\mx\delta_{s} & =\mu,\label{eq:LP_newton_step}\\
\ma\delta_{x} & =0,\nonumber \\
\ma^{\top}\delta_{y}+\delta_{s} & =0,\nonumber 
\end{align}

\end_inset

where 
\begin_inset Formula $\mx$
\end_inset

 and 
\begin_inset Formula $\ms$
\end_inset

 are the diagonal matrix with diagonal 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $s$
\end_inset

.
 In the following Lemma, we show how to write the step above using a projection
 matrix (
\begin_inset Formula $\mproj^{2}=\mproj$
\end_inset

).
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:Newton_step"

\end_inset

Suppose that 
\begin_inset Formula $\ma$
\end_inset

 has full row rank and 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

.
 Then, the unique solution for the linear system 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LP_newton_step"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is given by
\begin_inset Formula 
\begin{align*}
\mx^{-1}\delta_{x} & =(\mi-\mproj)(\delta_{\mu}/\mu),\\
\ms^{-1}\delta_{s} & =\mproj(\delta_{\mu}/\mu)
\end{align*}

\end_inset

where 
\begin_inset Formula $\delta_{\mu}=\mu-xs$
\end_inset

 and 
\begin_inset Formula $\mproj=\ms^{-1}\ma^{\top}(\ma\ms^{-1}\mx\ma^{\top})^{-1}\ma\mx$
\end_inset

.
\end_layout

\begin_layout Proof
Note that the step satisfies 
\begin_inset Formula $\ms\delta_{x}+\mx\delta_{s}=\delta_{\mu}$
\end_inset

.
 Multiply both sides by 
\begin_inset Formula $\ma\ms^{-1}$
\end_inset

 and using 
\begin_inset Formula $\ma\delta_{x}=0$
\end_inset

, we have
\begin_inset Formula 
\[
\ma\ms^{-1}\mx\delta_{s}=\ma\ms^{-1}\delta_{\mu}.
\]

\end_inset

Now we use that 
\begin_inset Formula $\ma^{\top}\delta_{y}+\delta_{s}=0$
\end_inset

 and get
\begin_inset Formula 
\[
\ma\ms^{-1}\mx\ma^{\top}\delta_{y}=-\ma\ms^{-1}\delta_{\mu}.
\]

\end_inset

Since 
\begin_inset Formula $\ma\in\R^{d\times n}$
\end_inset

 has full row rank and 
\begin_inset Formula $\ms^{-1}\mx$
\end_inset

 is invertible, we have that 
\begin_inset Formula $\ma\ms^{-1}\mx\ma^{\top}$
\end_inset

 is invertible.
 Hence, 
\begin_inset Formula 
\[
\delta_{y}=-(\ma\ms^{-1}\mx\ma^{\top})^{-1}\ma\ms^{-1}\delta_{\mu}\mbox{\ensuremath{\qquad} and \ensuremath{\qquad}}\delta_{s}=\ma^{\top}(\ma\ms^{-1}\mx\ma^{\top})^{-1}\ma\ms^{-1}\delta_{\mu}.
\]

\end_inset

Putting this into 
\begin_inset Formula $\ms\delta_{x}+\mx\delta_{s}=\delta_{\mu}$
\end_inset

, we have
\begin_inset Formula 
\[
\delta_{x}=\ms^{-1}\delta_{\mu}-\ms^{-1}\mx\ma^{\top}(\ma\ms^{-1}\mx\ma^{\top})^{-1}\ma\ms^{-1}\delta_{\mu}.
\]

\end_inset

The result follows from the definition of 
\begin_inset Formula $\mproj$
\end_inset

.
\end_layout

\begin_layout Subsection
Lower Bounding Step Size
\end_layout

\begin_layout Standard
The efficiency of interior point methods depends on how large a step we
 can take while staying within the domain.
 We first study the step operators 
\begin_inset Formula $(\mi-\mproj)$
\end_inset

 and 
\begin_inset Formula $\mproj$
\end_inset

.
 The following lemma implies that 
\begin_inset Formula $\mproj$
\end_inset

 is a nearly orthogonal projection matrix when 
\begin_inset Formula $\mu$
\end_inset

 is close to a multiple of the all-ones vector.
 Hence, the relative changes of 
\begin_inset Formula $\mx^{-1}\delta_{x}$
\end_inset

 and 
\begin_inset Formula $\ms^{-1}\delta_{s}$
\end_inset

 are essentially the orthogonal decomposition of the relative step 
\begin_inset Formula $\delta_{\mu}/\mu$
\end_inset

.
 For two vectors 
\begin_inset Formula $u,v$
\end_inset

, we define 
\begin_inset Formula $\norm u_{v}\defeq\sqrt{u^{\top}\Diag(v)u}$
\end_inset

 to be the norm defined by 
\begin_inset Formula $v$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:Projection_property"

\end_inset

Under the assumption in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Newton_step"

\end_inset

, 
\begin_inset Formula $\mproj$
\end_inset

 is a projection matrix such that 
\begin_inset Formula $\|\mproj v\|_{\mu}\leq\|v\|_{\mu}$
\end_inset

 for any 
\begin_inset Formula $v\in\Rn$
\end_inset

.
 Similarly, we have that 
\begin_inset Formula $\|(\mi-\mproj)v\|_{\mu}\leq\|v\|_{\mu}$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Formula $\mproj$
\end_inset

 is a projection because 
\begin_inset Formula $\mproj^{2}=\mproj$
\end_inset

.
 Define the orthogonal projection matrix
\begin_inset Formula 
\[
\mproj_{\mathrm{orth}}=\ms^{-1/2}\mx^{1/2}\ma^{\top}(\ma\ms^{-1}\mx\ma^{\top})^{-1}\ma\mx^{1/2}\ms^{-1/2},
\]

\end_inset

then we have
\begin_inset Formula 
\begin{align*}
\|\mproj v\|_{\mu}^{2} & =v^{\top}\mx\ma^{\top}(\ma\ms^{-1}\mx\ma^{\top})^{-1}\ma\ms^{-1}\mx\ms\ms^{-1}\ma^{\top}(\ma\ms^{-1}\mx\ma^{\top})^{-1}\ma\mx v\\
 & =v^{\top}\ms^{1/2}\mx^{1/2}\mproj_{\mathrm{orth}}\ms^{1/2}\mx^{1/2}v\\
 & \leq v^{\top}\ms^{1/2}\mx^{1/2}\ms^{1/2}\mx^{1/2}v=\|v\|_{\mu}^{2}.
\end{align*}

\end_inset

The calculation for 
\begin_inset Formula $\|(\mi-\mproj)v\|_{\mu}$
\end_inset

 is similar.
\end_layout

\begin_layout Standard
Next we give a lower bound on the largest feasible step size.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:step_size"

\end_inset

We have that 
\begin_inset Formula $\|\mx^{-1}\delta_{x}\|_{\infty}^{2}\leq\frac{1}{\min_{i}\mu_{i}}\|\delta_{\mu}/\mu\|_{\mu}^{2}$
\end_inset

 and 
\begin_inset Formula $\|\ms^{-1}\delta_{s}\|_{\infty}^{2}\leq\frac{1}{\min_{i}\mu_{i}}\|\delta_{\mu}/\mu\|_{\mu}^{2}$
\end_inset

.
 In particular, if 
\begin_inset Formula $\|\delta_{\mu}/\mu\|_{\mu}^{2}<\min_{i}\mu_{i}$
\end_inset

, we have 
\begin_inset Formula $(x+\delta_{x},s+\delta_{s})\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset


\end_layout

\begin_layout Proof
For 
\begin_inset Formula $\|\mx^{-1}\delta_{x}\|_{\infty}$
\end_inset

, we have 
\begin_inset Formula $\min_{i}\mu_{i}\|\mx^{-1}\delta_{x}\|_{\infty}^{2}\leq\|\mx^{-1}\delta_{x}\|_{\mu}^{2}$
\end_inset

 and hence
\begin_inset Formula 
\[
\|\mx^{-1}\delta_{x}\|_{\infty}^{2}\leq\frac{1}{\min_{i}\mu_{i}}\|\mx^{-1}\delta_{x}\|_{\mu}^{2}=\frac{1}{\min_{i}\mu_{i}}\|(\mi-\mproj)(\delta_{\mu}/\mu)\|_{\mu}^{2}\leq\frac{1}{\min_{i}\mu_{i}}\|\delta_{\mu}/\mu\|_{\mu}^{2}.
\]

\end_inset

The proof for 
\begin_inset Formula $\|\ms^{-1}\delta_{s}\|_{\infty}$
\end_inset

 is similar.
\end_layout

\begin_layout Proof
Hence, if 
\begin_inset Formula $\|\delta_{\mu}/\mu\|_{\mu}^{2}<\min_{i}\mu_{i}$
\end_inset

, we have that 
\begin_inset Formula $\|\mx^{-1}\delta_{x}\|_{\infty}<1$
\end_inset

 and 
\begin_inset Formula $\|\ms^{-1}\delta_{s}\|_{\infty}<1$
\end_inset

, i.e., 
\begin_inset Formula $|\delta_{x,i}|<|x_{i}|$
\end_inset

 and 
\begin_inset Formula $|\delta_{s,i}|<|s_{i}|$
\end_inset

 for all 
\begin_inset Formula $i$
\end_inset

.
 Therefore, 
\begin_inset Formula $x+\delta_{x}>0$
\end_inset

 and 
\begin_inset Formula $s+\delta_{s}>0$
\end_inset

 are feasible.
\end_layout

\begin_layout Standard
To decrease 
\begin_inset Formula $\mu$
\end_inset

 uniformly, we set 
\begin_inset Formula $\delta_{\mu}=-h\mu$
\end_inset

 for some step size 
\begin_inset Formula $h$
\end_inset

.
 To ensure the feasibility, we need 
\begin_inset Formula $\|\delta_{\mu}/\mu\|_{\mu}^{2}\leq\min_{i}\mu_{i}$
\end_inset

 and this gives the maximum step size
\begin_inset Formula 
\begin{equation}
h=\sqrt{\frac{\min_{i}\mu_{i}}{\sum_{i}\mu_{i}}}.\label{eq:max_h_formula}
\end{equation}

\end_inset

Note that the above quantity is maximized at 
\begin_inset Formula $h=n^{-1/2}$
\end_inset

 when 
\begin_inset Formula $\mu$
\end_inset

 has all equal coordinates.
\end_layout

\begin_layout Subsection
Staying within small 
\begin_inset Formula $\ell_{2}$
\end_inset

 distance
\end_layout

\begin_layout Standard
Since the step size 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:max_h_formula"
plural "false"
caps "false"
noprefix "false"

\end_inset

 maximizes when 
\begin_inset Formula $\mu$
\end_inset

 is a constant vector.
 A natural approach is to keep 
\begin_inset Formula $\mu$
\end_inset

 as a vector close in 
\begin_inset Formula $\ell_{2}$
\end_inset

 norm to a multiple of the all-ones vector.
 This motivates the following algorithm:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm2e}[H]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{
\end_layout

\end_inset


\begin_inset Formula $\mathtt{L2Step}(\ma,x,s,t_{\mathrm{start}},t_{\mathrm{end}})$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "alg:L2Step"

\end_inset


\end_layout

\begin_layout Standard

\series bold
Define
\series default
 
\begin_inset Formula $\mproj_{x,s}=\ms^{-1}\ma^{\top}(\ma\ms^{-1}\mx\ma^{\top})^{-1}\ma\mx$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
Invariant:
\series default
 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $\|xs-t\|_{2}\leq\frac{t}{4}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $t=t_{\mathrm{start}}$
\end_inset

, 
\begin_inset Formula $h=1/(16\sqrt{n})$
\end_inset

 and 
\begin_inset Formula $n$
\end_inset

 is the number of columns in 
\begin_inset Formula $\ma$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Repeat{
\end_layout

\end_inset


\begin_inset Formula $t\neq t_{\mathrm{end}}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $t'=\max(t/(1+h),t_{\mathrm{end}})$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\mu=xs$
\end_inset

 and 
\begin_inset Formula $\delta_{\mu}=t'-\mu$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\delta_{x}=\mx(\mi-\mproj_{x,s})(\delta_{\mu}/\mu)$
\end_inset

 and 
\begin_inset Formula $\delta_{s}=\ms\mproj_{x,s}(\delta_{\mu}/\mu)$
\end_inset

.
\end_layout

\begin_layout Standard
Set 
\begin_inset Formula $x\leftarrow x+\delta_{x}$
\end_inset

, 
\begin_inset Formula $s\leftarrow s+\delta_{s}$
\end_inset

 and 
\begin_inset Formula $t\leftarrow t'$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Return
\series default
 
\begin_inset Formula $(x,s)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithm2e}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that the algorithm requires some initial point 
\begin_inset Formula $(x,s)$
\end_inset

 close to the central path and we will show how to get this in the next
 section (by changing the linear program temporarily).
\end_layout

\begin_layout Standard
First, we show that the invariant is maintained in each step.
 The conclusion distance less than 
\begin_inset Formula $t/6$
\end_inset

 is needed in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:IPM_interior"

\end_inset

 where we call 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

 on a modified LP, then prove the result is close to central path for the
 original LP.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:L2Step"

\end_inset

Suppose that the input satisfies 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $\|xs-t_{\mathrm{start}}\|_{2}\leq\frac{t_{\mathrm{start}}}{4}$
\end_inset

.
 Then, the algorithm 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

 maintains 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $t>0$
\end_inset

 such that 
\begin_inset Formula $\|xs-t\|_{2}\leq\frac{t}{6}$
\end_inset

.
\end_layout

\begin_layout Proof
We prove by induction that 
\begin_inset Formula $\|xs-t\|_{2}\leq\frac{t}{6}$
\end_inset

 after each step.
 Note that the input satisfies 
\begin_inset Formula $\|xs-t\|_{2}\leq\frac{t}{4}$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $x'=x+\delta_{x}$
\end_inset

, 
\begin_inset Formula $s'=s+\delta_{s}$
\end_inset

 and 
\begin_inset Formula $t'$
\end_inset

 defined in the algorithm.
 Note that
\begin_inset Formula 
\[
x's'-t'=(x+\delta_{x})(s+\delta_{s})-t'=\mu+\ms\delta_{x}+\mx\delta_{s}+\delta_{x}\delta_{s}-t'.
\]

\end_inset

Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Newton_step"

\end_inset

 shows that 
\begin_inset Formula $\ms\delta_{x}+\mx\delta_{s}=t'-\mu$
\end_inset

.
 Hence, we have 
\begin_inset Formula 
\[
x's'-t'=\delta_{x}\delta_{s}=\mx^{-1}\delta_{x}\cdot\ms^{-1}\delta_{s}\cdot\mu.
\]

\end_inset

Using this, we have
\begin_inset Formula 
\[
\|x's'-t'\|_{2}\leq\|\mu^{1/2}\mx^{-1}\delta_{x}\|_{2}\|\mu^{1/2}\ms^{-1}\delta_{s}\|_{2}=\|\mx^{-1}\delta_{x}\|_{\mu}\|\ms^{-1}\delta_{s}\|_{\mu}\leq\|\delta_{\mu}/\mu\|_{\mu}^{2}.
\]

\end_inset

where we used Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Projection_property"

\end_inset

 at the end.
\end_layout

\begin_layout Proof
Using 
\begin_inset Formula $t'-\mu=\frac{t'}{t}(t-\mu)+(\frac{t'}{t}-1)\mu$
\end_inset

, we have
\begin_inset Formula 
\[
\|\delta_{\mu}/\mu\|_{\mu}=\|\frac{t'}{t}\frac{t-\mu}{\mu}+(\frac{t'}{t}-1)\|_{\mu}\leq\frac{t'}{t}\|xs-t\|_{\mu^{-1}}+\|\frac{t'}{t}-1\|_{\mu}.
\]

\end_inset

Since 
\begin_inset Formula $\|\mu-t\|_{2}\leq\frac{t}{4}$
\end_inset

, we have 
\begin_inset Formula $\min_{i}\mu_{i}\geq\frac{3t}{4}$
\end_inset

 and 
\begin_inset Formula $\max_{i}\mu_{i}\leq\frac{5}{4}t$
\end_inset

.
 Using 
\begin_inset Formula $|\frac{t'}{t}-1|\leq h=\frac{1}{16\sqrt{n}}$
\end_inset

, we have
\begin_inset Formula 
\[
\|\delta_{\mu}/\mu\|_{\mu}\leq\frac{t'}{t}\sqrt{\frac{4}{3t}}\|xs-t\|_{2}+h\sqrt{\frac{5}{4}tn}\leq\sqrt{\frac{t}{12}}+h\sqrt{\frac{5}{4}tn}\leq0.38\sqrt{t}.
\]

\end_inset

Hence, we have 
\begin_inset Formula $\|x's'-t'\|_{2}\leq\|\delta_{\mu}/\mu\|_{\mu}^{2}\leq0.15t\leq t'/6$
\end_inset

.
 Furthermore, 
\begin_inset Formula $\|\delta_{\mu}/\mu\|_{\mu}^{2}<\min_{i}\mu_{i}$
\end_inset

 which implies 
\begin_inset Formula $(x,s)$
\end_inset

 is feasible (Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:step_size"

\end_inset

).
\end_layout

\begin_layout Standard
Note that the lemma above only concludes the output is close to central
 path.
 To upper bound the error, we can apply Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:duality_gap"

\end_inset

 which shows the duality gap is equal to 
\begin_inset Formula $x^{\top}s$
\end_inset

.
\end_layout

\begin_layout Subsection
Solving LP Approximately and Exactly
\begin_inset CommandInset label
LatexCommand label
name "subsec:SolveLP_apx"

\end_inset


\end_layout

\begin_layout Standard
Here we discuss how to get a feasible interior point close to the central
 path by modifying the linear program.
 The runtime of interior point method depends on how degenerate the linear
 program is.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:LP_para"

\end_inset

We define the following parameters for the linear program 
\begin_inset Formula $\min_{\ma x=b,x\geq0}c^{\top}x$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Inner radius 
\begin_inset Formula $r$
\end_inset

: There exists a 
\begin_inset Formula $x\in\PriR$
\end_inset

 such that 
\begin_inset Formula $x_{i}\geq r$
\end_inset

 for all 
\begin_inset Formula $i\in[n]$
\end_inset

.
\end_layout

\begin_layout Enumerate
Outer radius 
\begin_inset Formula $R$
\end_inset

: For any 
\begin_inset Formula $x\geq0$
\end_inset

 with 
\begin_inset Formula $\ma x=b$
\end_inset

, we have that 
\begin_inset Formula $\|x\|_{2}\leq R$
\end_inset

.
\end_layout

\begin_layout Enumerate
Lipschitz constant 
\begin_inset Formula $L$
\end_inset

: 
\begin_inset Formula $\|c\|_{2}\leq L$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
Since 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

 requires a feasible point near the central path, we modify the linear program
 to make it happen.
 To satisfy the constraint 
\begin_inset Formula $\ma x=b$
\end_inset

, we start the algorithm by taking a least square solution of the constraint
 
\begin_inset Formula $\ma x=b$
\end_inset

.
 Since it can be negative, we write the variable 
\begin_inset Formula $x=x^{+}-x^{-}$
\end_inset

 with both 
\begin_inset Formula $x^{+},x^{-}\geq0$
\end_inset

.
 We put a large cost vector on 
\begin_inset Formula $x^{-}$
\end_inset

 to ensure the solution is roughly the same.
 The crux of the proof is that if we optimize this new program well enough,
 we will have 
\begin_inset Formula $x^{+}-x^{-}>0$
\end_inset

 and hence 
\begin_inset Formula $x^{+}-x^{-}$
\end_inset

 gives a good starting point of the original program.
 Due to technical reasons, we need to put an extra constraint 
\begin_inset Formula $1^{\top}x^{+}\leq\Lambda$
\end_inset

 for some 
\begin_inset Formula $\Lambda$
\end_inset

 to ensure the problem is bounded.
 The precise formulation of the modified linear program is as follows:
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:IPM_interior_modified"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Modified Linear Program
\end_layout

\end_inset

Consider a linear program 
\begin_inset Formula $\min_{\ma x=b,x\geq0}c^{\top}x$
\end_inset

 with inner radius 
\begin_inset Formula $r$
\end_inset

, outer radius 
\begin_inset Formula $R$
\end_inset

 and Lipschitz constant 
\begin_inset Formula $L$
\end_inset

.
 For any 
\begin_inset Formula $\overline{R}\geq10R$
\end_inset

, 
\begin_inset Formula $t\geq8L\overline{R}$
\end_inset

, we define the modified primal linear program by 
\begin_inset Formula 
\[
\min_{(x^{+},x^{-},x^{\theta})\in\mathcal{P}_{\overline{R},t}}c^{\top}x^{+}+\widetilde{c}^{\top}x^{-}
\]

\end_inset

where 
\begin_inset Formula 
\[
\mathcal{P}_{\overline{R},t}=\{(x^{+},x^{-},x^{\theta})\in\R_{\geq0}^{2n+1}:\ma(x^{+}-x^{-})=b,\sum_{i=1}^{n}x_{i}^{+}+x^{\theta}=\widetilde{b}\}
\]

\end_inset

with 
\begin_inset Formula $x_{c}^{+}=\frac{t}{c+t/\overline{R}},x_{c}^{-}=x_{c}^{+}-\ma^{\top}(\ma\ma^{\top})^{-1}b,\widetilde{c}=t/x_{c}^{-}$
\end_inset

, 
\begin_inset Formula $\widetilde{b}=\sum_{i}x_{c,i}^{+}+\overline{R}$
\end_inset

.
 We define the corresponding dual polytope by
\begin_inset Formula 
\[
\mathcal{D}_{\overline{R},t}=\{(s^{+},s^{-},s^{\theta})\in\R_{\geq0}^{2n+1}:\ma^{\top}y+\lambda\mathbf{1}+s^{+}=c,-\ma^{\top}y+s^{-}=\widetilde{c},\lambda+s^{\theta}=0\text{ for some }y\in\R^{d}\text{ and }\lambda\in\R\}.
\]

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
- why the notation 
\begin_inset Formula $x_{c}$
\end_inset

 ? 
\begin_inset Formula $c$
\end_inset

 probably for center? Probably not good name.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The main result about the modified program is the following.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:IPM_interior"

\end_inset

Given a linear program 
\begin_inset Formula $\min_{\ma x=b,x\in\R_{\geq}^{n}}c^{\top}x$
\end_inset

 with inner radius 
\begin_inset Formula $r$
\end_inset

, outer radius 
\begin_inset Formula $R$
\end_inset

 and Lipschitz constant 
\begin_inset Formula $L$
\end_inset

.
 For any 
\begin_inset Formula $0\leq\epsilon\leq\frac{1}{2}$
\end_inset

, the modified linear program (Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:IPM_interior_modified"

\end_inset

) with 
\begin_inset Formula $\overline{R}=\frac{5}{\epsilon}R,t=2^{16}\epsilon^{-3}n^{2}\frac{R}{r}\cdot LR$
\end_inset

 has the following properties:
\end_layout

\begin_deeper
\begin_layout Itemize
The point 
\begin_inset Formula $(x_{c}^{+},x_{c}^{-},\overline{R})$
\end_inset

 is on the central path of the modified program at 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Itemize
For any primal 
\begin_inset Formula $x\defeq(x^{+},x^{-},x^{\theta})\in\mathcal{P}_{\overline{R},t}$
\end_inset

 and dual 
\begin_inset Formula $s\defeq(s^{+},s^{-},s^{\theta})\in\mathcal{D}_{\overline{R},t}$
\end_inset

 such that 
\begin_inset Formula $\frac{5}{6}LR\leq x_{i}s_{i}\leq\frac{7}{6}LR$
\end_inset

, we have that
\begin_inset Formula 
\[
(x^{+}-x^{-},s^{+}-s^{\theta})\in\PriR\times\DualR
\]

\end_inset

and that 
\begin_inset Formula $x_{i}^{-}\leq\epsilon x_{i}^{+}$
\end_inset

 and 
\begin_inset Formula $s^{\theta}\leq\epsilon s_{i}^{+}$
\end_inset

 for all 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
Since the proof is not illuminating, we defer it to Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:IPM_interior"

\end_inset

 (Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:ipm_interior_modified"

\end_inset

 and Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lemma:IPM_center_original"

\end_inset

).
\end_layout

\begin_layout Standard
Now we state our main algorithm.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm2e}[H]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{
\end_layout

\end_inset


\begin_inset Formula $\mathtt{SlowSolveLP}(\ma,b,c,x^{(0)},\delta)$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "alg:SlowSolveLP"

\end_inset


\end_layout

\begin_layout Standard

\series bold
Assumption: the linear program has inner radius 
\begin_inset Formula $r$
\end_inset

, outer radius 
\begin_inset Formula $R$
\end_inset

 and Lipschitz constant 
\begin_inset Formula $L$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\epsilon=1/(100\sqrt{n})$
\end_inset

, 
\begin_inset Formula $\overline{R}=\frac{5}{\epsilon}R$
\end_inset

, 
\begin_inset Formula $t=2^{16}\epsilon^{-3}n^{2}\frac{R}{r}\cdot LR$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcp{
\end_layout

\end_inset

Define the modified program 
\begin_inset Formula $\min_{\oma x=\overline{b}}\overline{c}^{\top}x$
\end_inset

 by Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:IPM_interior_modified"

\end_inset

 with parameters 
\begin_inset Formula $\overline{R}$
\end_inset

 and 
\begin_inset Formula $t$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\oma=\left[\begin{array}{ccc}
\ma & -\ma & 0\\
1 & 0 & 1
\end{array}\right]$
\end_inset

, 
\begin_inset Formula $\overline{c}=(c,\widetilde{c})$
\end_inset

, 
\begin_inset Formula $\overline{b}=(b,\widetilde{b})$
\end_inset

 where 
\begin_inset Formula $\widetilde{c}$
\end_inset

 and 
\begin_inset Formula $\widetilde{b}$
\end_inset

 are defined in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:IPM_interior_modified"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcp{
\end_layout

\end_inset

Write down the central path at 
\begin_inset Formula $t$
\end_inset

 for modified linear program using Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:ipm_interior_modified"

\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\overline{x}=(x_{c}^{+},x_{c}^{-},\overline{R})$
\end_inset

.
 
\begin_inset Formula $\overline{s}=x/t$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $(\overline{x},\overline{s})=\mathtt{L2Step}(\oma,\overline{x},\overline{s},t,LR)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $(x,s)=(x^{+}-x^{-},s^{+}-s^{\theta})$
\end_inset

 where 
\begin_inset Formula $\overline{x}=(x^{+},x^{-},x^{\theta})$
\end_inset

 and 
\begin_inset Formula $\overline{s}=(s^{+},s^{-},s^{\theta})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $(x_{\mathrm{end}},s_{\mathrm{end}})=\mathtt{L2Step}(\ma,x^{+}-x^{-},s^{+}-s^{\theta},LR,t_{\mathrm{end}})$
\end_inset

 with 
\begin_inset Formula $t_{\mathrm{end}}=\delta LR/(2n)$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
Return
\series default
 
\begin_inset Formula $x_{\mathrm{end}}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithm2e}
\end_layout

\end_inset


\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:SlowSolveLP"

\end_inset

Consider a linear program 
\begin_inset Formula $\min_{\ma x=b,x\geq0}c^{\top}x$
\end_inset

 with 
\begin_inset Formula $n$
\end_inset

 variables and 
\begin_inset Formula $d$
\end_inset

 constraints.
 Assume the linear program has inner radius 
\begin_inset Formula $r$
\end_inset

, outer radius 
\begin_inset Formula $R$
\end_inset

 and Lipschitz constant 
\begin_inset Formula $L$
\end_inset

 (see Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:LP_para"

\end_inset

).
 Then, 
\begin_inset Formula $\mathtt{SlowSolveLP}$
\end_inset

 outputs 
\begin_inset Formula $x$
\end_inset

 such that
\begin_inset Formula 
\begin{align*}
c^{\top}x & \leq\min_{\ma x=b,x\geq0}c^{\top}x+\delta LR,\\
\ma x & =b,\\
x & \geq0.
\end{align*}

\end_inset

The algorithm takes 
\begin_inset Formula $O(\sqrt{n}\log(nR/(\delta r)))$
\end_inset

 Newton steps (defined in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LP_newton_step"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Theorem
If we further assume that the solution 
\begin_inset Formula $x^{*}=\arg\min_{\ma x=b,x\geq0}c^{\top}x$
\end_inset

 is unique and that 
\begin_inset Formula $c^{\top}x\geq c^{\top}x^{*}+\eta LR$
\end_inset

 for any other vertex 
\begin_inset Formula $x$
\end_inset

 of 
\begin_inset Formula $\{\ma x=b,x\geq0\}$
\end_inset

 for some 
\begin_inset Formula $\eta>\delta\geq0$
\end_inset

, then we have that 
\begin_inset Formula $\|x-x^{*}\|_{2}\leq\frac{2\delta R}{\eta}$
\end_inset

.
\end_layout

\begin_layout Proof
By Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:IPM_interior"

\end_inset

, the point 
\begin_inset Formula $(x_{c}^{+},x_{c}^{-},\overline{R})$
\end_inset

 is on the central path of the modified program at 
\begin_inset Formula $t$
\end_inset

.
 After the first call of 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

, Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:L2Step"

\end_inset

 shows that 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

 returns 
\begin_inset Formula $(\overline{x},\overline{s})$
\end_inset

 such that 
\begin_inset Formula $\|\overline{x}\overline{s}-t\|_{2}\leq\frac{t}{6}$
\end_inset

 with 
\begin_inset Formula $t=LR$
\end_inset

.
\end_layout

\begin_layout Proof
Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:IPM_interior"

\end_inset

 shows that 
\begin_inset Formula $(x,s)=(x^{+}-x^{-},s^{+}-s^{\theta})\in\PriR\times\DualR$
\end_inset

 and that 
\begin_inset Formula $x=(1\pm\epsilon)x^{+}$
\end_inset

 and 
\begin_inset Formula $s=(1\pm\epsilon)s^{+}$
\end_inset

.
 Since 
\begin_inset Formula $\epsilon=\frac{1}{100\sqrt{n}}$
\end_inset

 and 
\begin_inset Formula $\|x^{+}s^{+}-t\|_{2}\leq\frac{t}{6}$
\end_inset

 with 
\begin_inset Formula $t=LR$
\end_inset

, we have that 
\begin_inset Formula $\|xs-t\|_{2}\leq\frac{t}{4}$
\end_inset

.
 This verifies the condition for the second call of 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

.
\end_layout

\begin_layout Proof
After the second call of 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

, Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:L2Step"

\end_inset

 shows that 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

 returns 
\begin_inset Formula $(x_{\mathrm{end}},s_{\mathrm{end}})$
\end_inset

 such that 
\begin_inset Formula $\|x_{\mathrm{end}}s_{\mathrm{end}}-t_{\mathrm{end}}\|_{2}\leq\frac{t}{6}$
\end_inset

 with 
\begin_inset Formula $t_{\mathrm{end}}=\delta LR/(2n)$
\end_inset

.
 Hence, Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:duality_gap"

\end_inset

 shows that 
\begin_inset Formula 
\[
c^{\top}x_{\mathrm{end}}\leq\min_{\ma x=b,x\geq0}c^{\top}x+x_{\mathrm{end}}^{\top}s_{\mathrm{end}}\leq\min_{\ma x=b,x\geq0}c^{\top}x+2t_{\mathrm{end}}n\leq\min_{\ma x=b,x\geq0}c^{\top}x+\delta LR.
\]

\end_inset

For the runtime, note that 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

 decreases 
\begin_inset Formula $t$
\end_inset

 by 
\begin_inset Formula $1-\Omega(n^{-1/2})$
\end_inset

 factor each step.
 Hence, the first call takes 
\begin_inset Formula $O(\sqrt{n}\log(nR/r))$
\end_inset

 Newton steps and second call takes 
\begin_inset Formula $O(\sqrt{n}\log(n/\delta))$
\end_inset

 Newton steps.
\end_layout

\begin_layout Proof
For the last conclusion, we assume 
\begin_inset Formula $\delta\leq\eta$
\end_inset

 and let 
\begin_inset Formula $\mathcal{P}_{t}=\mathcal{P}\cap\{c^{\top}x\leq c^{\top}x^{*}+tLR\}$
\end_inset

.
 Note that 
\begin_inset Formula $\mathcal{P}_{\eta}$
\end_inset

 is a cone at 
\begin_inset Formula $x^{*}$
\end_inset

 (because there is no vertex except 
\begin_inset Formula $x^{*}$
\end_inset

 with value less than 
\begin_inset Formula $c^{\top}x^{*}+tLR$
\end_inset

).
 Hence, we have 
\begin_inset Formula $\mathcal{P}_{\delta}-x^{*}=\frac{\delta}{\eta}(\mathcal{P}_{\eta}-x^{*})$
\end_inset

.
 Since 
\begin_inset Formula $x\in\mathcal{P}_{\delta}$
\end_inset

, we have that 
\begin_inset Formula 
\[
\|x-x^{*}\|_{2}\leq\frac{\delta}{\eta}\text{diameter}(\mathcal{P}_{\eta}-x^{*})\leq\frac{2\delta R}{\eta}.
\]

\end_inset


\end_layout

\begin_layout Standard
If we know the solution of the linear program is integral or rational with
 some bound on the number of bits, then getting a solution close enough
 to 
\begin_inset Formula $x^{*}$
\end_inset

 allows us to round the solution to an integral solution.
 Therefore, the last conclusion of the theorem above gives us an exact linear
 program algorithm assuming 
\begin_inset Formula $\ma,b,c$
\end_inset

 are integral and bounded.
 The uniqueness assumption can be achieved by perturbing the cost vector
 by a random vector (e.g., using the 
\begin_inset Quotes eld
\end_inset

isolation
\begin_inset Quotes erd
\end_inset

 lemma 
\begin_inset CommandInset citation
LatexCommand cite
after "Lemma 4"
key "klivans2001randomness"
literal "false"

\end_inset

).
\end_layout

\begin_layout Exercise
Make the perturbation deterministic while preserving solutions.
\end_layout

\begin_layout Section
Robust Interior Point Method
\end_layout

\begin_layout Standard
To improve the interior point method, one can either improve the number
 of steps 
\begin_inset Formula $\widetilde{O}(\sqrt{n})$
\end_inset

 or the cost per step.
 The first is a major open problem.
 In this note, we focus on the latter question.
 Recall from 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LP_newton_step"
plural "false"
caps "false"
noprefix "false"

\end_inset

 that the linear system we solve in each step is of the form
\begin_inset Formula 
\begin{align}
\ms\delta_{x}+\mx\delta_{s} & =\delta_{\mu},\nonumber \\
\ma\delta_{x} & =0,\nonumber \\
\ma^{\top}\delta_{y}+\delta_{s} & =0.\label{eq:LP_newton_step_2}
\end{align}

\end_inset

In each step, 
\begin_inset Formula $x,s$
\end_inset

 and 
\begin_inset Formula $\delta_{\mu}$
\end_inset

 in the equation above changes relatively by a vector with bounded 
\begin_inset Formula $\ell_{2}$
\end_inset

 norm.
 So, only few coordinates change a lot in each step.
 To take advantage of this, the robust interior point method contains two
 new components: 1) Analyze the convergence when we only solve the linear
 system approximately (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:IPM_cosh_step"

\end_inset

).
 2) Show how to maintain the solution throughout the iteration (Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:select_xsr"

\end_inset

 and Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:IPM_Inverse_Maintenance"

\end_inset

).
\end_layout

\begin_layout Subsection
Staying within small 
\begin_inset Formula $\ell_{\infty}$
\end_inset

 distance
\begin_inset CommandInset label
LatexCommand label
name "subsec:IPM_cosh_step"

\end_inset


\end_layout

\begin_layout Standard
In the above description and analysis, we assumed that we computed each
 step of the interior point method precisely.
 But one can imagine that it suffices to compute steps approximately since
 our goal is only to stay close to the central path.
 This could have significant computational advantages.
\end_layout

\begin_layout Standard
To make the interior point method robust to noise in the updates to 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $s$
\end_inset

, we need the method to work under a larger neighborhood than that given
 by the Euclidean norm (
\begin_inset Formula $\|xs-t\|_{2}\leq\frac{t}{4}$
\end_inset

).
 We cannot increase the radius of the 
\begin_inset Formula $\ell_{2}$
\end_inset

 ball because we need the neighborhood to lie strictly inside the feasible
 region.
 One natural alternative choice of distance and potential would be a higher
 norm, 
\begin_inset Formula $\|xs-t\|_{q}^{q}$
\end_inset

.
 However, analyzing the step 
\begin_inset Formula $\delta_{\mu}$
\end_inset

 that minimizes 
\begin_inset Formula $\|\mu+\delta_{\mu}-t\|_{q}^{q}$
\end_inset

 involves many cases.
 Instead, we use the potential
\begin_inset Formula 
\begin{equation}
\Phi(r)=\sum_{i=1}^{n}\cosh(\lambda r_{i})=\sum_{i=1}^{n}\frac{(e^{\lambda r_{i}}+e^{-\lambda r_{i}})}{2}.\label{eq:Phi_potential}
\end{equation}

\end_inset

with 
\begin_inset Formula $r=\frac{xs-t}{t}$
\end_inset

 for some scalar 
\begin_inset Formula $\lambda=\Theta(\log n)$
\end_inset

.
 This potential induces the following algorithm where each step of the algorithm
 takes the step 
\begin_inset Formula $\delta_{\mu}\approx-c\nabla\Phi(\frac{xs-t}{t})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm2e}[H]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{
\end_layout

\end_inset


\begin_inset Formula $\mathtt{RobustStep}(\ma,x,s,t_{\mathrm{start}},t_{\mathrm{end}})$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "alg:RobustStep"

\end_inset


\end_layout

\begin_layout Standard

\series bold
Define
\series default
 
\begin_inset Formula $\Phi(r)$
\end_inset

 according to 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Phi_potential"
plural "false"
caps "false"
noprefix "false"

\end_inset

 with 
\begin_inset Formula $\lambda=16\log40n$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
Invariant:
\series default
 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $\Phi(r)\leq16n$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $t=t_{\mathrm{start}}$
\end_inset

, 
\begin_inset Formula $h=1/(128\lambda\sqrt{n})$
\end_inset

 and 
\begin_inset Formula $n$
\end_inset

 is the number of columns in 
\begin_inset Formula $\ma$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Repeat{
\end_layout

\end_inset


\begin_inset Formula $t\neq t_{\mathrm{end}}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pick 
\begin_inset Formula $\ox$
\end_inset

, 
\begin_inset Formula $\os$
\end_inset

 and 
\begin_inset Formula $\overline{r}$
\end_inset

 such that 
\begin_inset Formula $\|\ln\ox-\ln x\|_{\infty}\leq\frac{1}{48}$
\end_inset

, 
\begin_inset Formula $\|\ln\os-\ln s\|_{\infty}\leq\frac{1}{48}$
\end_inset

 and 
\begin_inset Formula $\|\overline{r}-\frac{xs-t}{t}\|_{\infty}\leq\frac{1}{48\lambda}$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $t'=\max(t/(1+h),t_{\mathrm{end}})$
\end_inset

, 
\begin_inset Formula $\overline{\delta}_{\mu}=-\frac{t'}{32\lambda}\frac{\overline{g}}{\|\overline{g}\|_{2}}$
\end_inset

, 
\begin_inset Formula $\overline{g}=\nabla\Phi(\overline{r})$
\end_inset

.
\end_layout

\begin_layout Standard
Find 
\begin_inset Formula $\delta_{x},\delta_{s}$
\end_inset

 such that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\oms\delta_{x}+\omx\delta_{s} & =\overline{\delta}_{\mu},\nonumber \\
\ma\delta_{x} & =0,\nonumber \\
\ma^{\top}\delta_{y}+\delta_{s} & =0.\label{eq:LP_newton_step_robust}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Set 
\begin_inset Formula $x\leftarrow x+\delta_{x}$
\end_inset

, 
\begin_inset Formula $s\leftarrow s+\delta_{s}$
\end_inset

 and 
\begin_inset Formula $t\leftarrow t'$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Return
\series default
 
\begin_inset Formula $(x,s)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithm2e}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename robustCPM.jpg
	height 2in

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The Central Path.
 The standard method keeps the current point within a relative 
\begin_inset Formula $\ell_{2}$
\end_inset

-norm ball, while it suffices to use a larger 
\begin_inset Formula $\ell_{\infty}$
\end_inset

-norm ball.
 The robust method provides a bridge to the latter via the cosh ball defined
 by 
\begin_inset Formula $\Phi$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We begin with useful facts about 
\begin_inset Formula $\Phi$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:robust_IPM_Phi"

\end_inset

Define 
\begin_inset Formula $\Phi(r)$
\end_inset

 according to 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Phi_potential"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 For any 
\begin_inset Formula $r\in\Rn$
\end_inset

, we have that 
\begin_inset Formula $\|r\|_{\infty}\leq\frac{\log2\Phi(r)}{\lambda}$
\end_inset

 and 
\begin_inset Formula $\|\nabla\Phi(r)\|_{2}\geq\frac{\lambda}{\sqrt{n}}(\Phi(r)-n)$
\end_inset

.
 Moreover, if 
\begin_inset Formula $\Phi(r)\geq4n$
\end_inset

 and 
\begin_inset Formula $\|\delta\|_{\infty}\leq\frac{1}{5\lambda}$
\end_inset

, we have 
\begin_inset Formula 
\[
\|\nabla\Phi(r+\delta)-\nabla\Phi(r)\|_{2}\leq\frac{1}{3}\|\nabla\Phi(r)\|_{2}.
\]

\end_inset


\end_layout

\begin_layout Proof
We have 
\begin_inset Formula $\Phi(r)\geq\frac{1}{2}\min_{i}e^{\lambda|r_{i}|}$
\end_inset

 and hence 
\begin_inset Formula $\|r\|_{\infty}\leq\frac{\log2\Phi(r)}{\lambda}$
\end_inset

.
\end_layout

\begin_layout Proof
For the second claim, wsing that 
\begin_inset Formula $\nabla\Phi(r)=\sum_{i=1}^{n}\lambda\sinh(\lambda r_{i})$
\end_inset

, we have
\begin_inset Formula 
\begin{align*}
\|\nabla\Phi(r)\|_{2} & =\lambda\sqrt{\sum_{i=1}^{n}\sinh^{2}(\lambda r_{i})}=\lambda\sqrt{\sum_{i=1}^{n}(\cosh^{2}(\lambda r_{i})-1)}\\
 & \geq\frac{\lambda}{\sqrt{n}}\sum_{i=1}^{n}\sqrt{\cosh^{2}(\lambda r_{i})-1}\geq\frac{\lambda}{\sqrt{n}}\sum_{i=1}^{n}(\cosh(\lambda r_{i})-1)\\
 & =\frac{\lambda}{\sqrt{n}}(\Phi(r)-n).
\end{align*}

\end_inset


\end_layout

\begin_layout Proof
For the last claim, using 
\begin_inset Formula $\sinh(r+\delta)=\sinh r\cosh\delta+\cosh r\sinh\delta$
\end_inset

 and 
\begin_inset Formula $|\cosh r-\sinh r|\leq1$
\end_inset

, for 
\begin_inset Formula $|\delta|\leq\frac{1}{5}$
\end_inset

, we have
\begin_inset Formula 
\begin{align*}
|\sinh(r+\delta)-\sinh(r)| & \leq|\cosh\delta-1|\cdot|\sinh r|+|\sinh\delta|\cdot\cosh r\\
 & \leq\left(|\cosh\delta-1|+|\sinh\delta|\right)\cdot|\sinh r|+|\sinh\delta|\\
 & \leq\frac{1}{4}|\sinh r|+\frac{1}{4}.
\end{align*}

\end_inset

Using that 
\begin_inset Formula $\nabla\Phi(r)=\sum_{i=1}^{n}\lambda\sinh(\lambda r_{i})$
\end_inset

, for 
\begin_inset Formula $\|\delta\|_{\infty}\leq\frac{1}{5\lambda}$
\end_inset

, we have
\begin_inset Formula 
\begin{equation}
\|\nabla\Phi(r+\delta)-\nabla\Phi(r)\|_{2}\leq\frac{1}{4}\|\nabla\Phi(r)\|_{2}+\frac{\sqrt{n}\lambda}{4}.\label{eq:grad_phi_diff}
\end{equation}

\end_inset

Since 
\begin_inset Formula $\Phi(r)\geq4n$
\end_inset

, we have that 
\begin_inset Formula $\|\nabla\Phi(r)\|_{2}\geq3\sqrt{n}\lambda$
\end_inset

 and hence 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:grad_phi_diff"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows that
\begin_inset Formula 
\[
\|\nabla\Phi(r+\delta)-\nabla\Phi(r)\|_{2}\leq(\frac{1}{4}+\frac{1}{12})\|\nabla\Phi(r)\|_{2}=\frac{1}{3}\|\nabla\Phi(r)\|_{2}.
\]

\end_inset


\end_layout

\begin_layout Standard
We collect some basic bounds on the step in the following lemma.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:RobustIPM_basic"

\end_inset

Using the notation in 
\begin_inset Formula $\mathtt{RobustStep}$
\end_inset

 (Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:RobustStep"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Under the invariant 
\begin_inset Formula $\Phi((xs-t)/t)\leq16n$
\end_inset

, we have 
\begin_inset Formula $\|xs-t\|_{\infty}\leq\frac{t}{16}$
\end_inset

, 
\begin_inset Formula $\|\delta_{x}/x\|_{2}\leq\frac{1}{16\lambda}$
\end_inset

, and 
\begin_inset Formula $\|\delta_{s}/s\|_{2}\leq\frac{1}{16\lambda}$
\end_inset

.
\end_layout

\begin_layout Proof
Using 
\begin_inset Formula $\Phi((xs-t)/t)\leq16n$
\end_inset

 and Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:robust_IPM_Phi"

\end_inset

, we have
\begin_inset Formula 
\[
\|xs-t\|_{\infty}\leq\frac{t\log32n}{\lambda}\leq\frac{t}{16}
\]

\end_inset


\end_layout

\begin_layout Proof
By Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Newton_step"

\end_inset

, we have 
\begin_inset Formula $\mx^{-1}\delta_{x}=(\mi-\mproj)(\overline{\delta}_{\mu}/\overline{\mu})$
\end_inset

 where 
\begin_inset Formula $\overline{\mu}=\ox\os$
\end_inset

 and 
\begin_inset Formula $\mproj=\oms^{-1}\ma^{\top}(\ma\oms^{-1}\omx\ma^{\top})^{-1}\ma\omx$
\end_inset

.
 By Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Projection_property"

\end_inset

, we have 
\begin_inset Formula 
\[
\|\delta_{x}/x\|_{\overline{\mu}}=\|(\mi-\mproj)v\|_{\overline{\mu}}\leq\|\overline{\delta}_{\mu}/\overline{\mu}\|_{\overline{\mu}}.
\]

\end_inset

Using that 
\begin_inset Formula $\|xs-t\|_{\infty}\leq\frac{t}{16}$
\end_inset

, 
\begin_inset Formula $\|\ln\ox-\ln x\|_{\infty}\leq\frac{1}{48}$
\end_inset

, 
\begin_inset Formula $\|\ln\os-\ln s\|_{\infty}\leq\frac{1}{48}$
\end_inset

, we have 
\begin_inset Formula $\overline{\mu}\geq\frac{10}{11}t$
\end_inset

 and hence
\begin_inset Formula 
\[
\|\delta_{x}/x\|_{2}\leq\sqrt{\frac{11}{10t}}\|\delta_{x}/x\|_{\overline{\mu}}\leq\sqrt{\frac{11}{10t}}\|\overline{\delta}_{\mu}\|_{\overline{\mu}^{-1}}\leq\frac{11}{10t}\|\overline{\delta}_{\mu}\|_{2}
\]

\end_inset

Using the formula 
\begin_inset Formula $\overline{\delta}_{\mu}=-\frac{t'}{32\lambda}\frac{\overline{g}}{\|\overline{g}\|_{2}}$
\end_inset

, we have
\begin_inset Formula 
\begin{align*}
\|\delta_{x}/x\|_{2} & \leq\frac{11}{10}\frac{t'}{32\lambda t}\leq\frac{1}{16\lambda}.
\end{align*}

\end_inset

Same proof gives 
\begin_inset Formula $\|\delta_{s}/s\|_{2}\leq\frac{1}{16\lambda}$
\end_inset

.
\end_layout

\begin_layout Standard
Using this, we prove the algorithm 
\begin_inset Formula $\mathtt{RobustStep}$
\end_inset

 satisfies the invariant on the distance.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:RobustStep"

\end_inset

Suppose that the input satisfies 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $\Phi((xs-t_{\mathrm{start}})/t_{\mathrm{start}})\leq16n$
\end_inset

.
 Let 
\begin_inset Formula $x^{(k)},s^{(k)},t^{(k)}$
\end_inset

 be the 
\begin_inset Formula $x,s,t$
\end_inset

 computed in the 
\begin_inset Formula $\mathtt{RobustStep}$
\end_inset

 after the 
\begin_inset Formula $k$
\end_inset

-th step.
 Let 
\begin_inset Formula $\Phi^{(k)}=\Phi((x^{(k)}s^{(k)}-t^{(k)})/t^{(k)})$
\end_inset

.
 Then, we have 
\begin_inset Formula 
\[
\Phi^{(k+1)}\leq\begin{cases}
12n & \text{if }\Phi^{(k)}\leq8n\\
\Phi^{(k)} & \text{otherwise}
\end{cases}.
\]

\end_inset

Furthermore, we have that 
\begin_inset Formula $\|r^{(k+1)}-r^{(k)}\|_{2}\leq\frac{1}{16\lambda}$
\end_inset

 where 
\begin_inset Formula $r^{(k)}=(x^{(k)}s^{(k)}-t^{(k)})/t^{(k)}$
\end_inset

.
\end_layout

\begin_layout Proof
Fix some iteration 
\begin_inset Formula $k$
\end_inset

.
 Let 
\begin_inset Formula $x=x^{(k)},s=s^{(k)},t=t^{(k)},x'=x^{(k+1)},s'=s^{(k+1)}$
\end_inset

 and 
\begin_inset Formula $t'=t^{(k+1)}$
\end_inset

.
 We define 
\begin_inset Formula $r=(xs-t)/t$
\end_inset

 and 
\begin_inset Formula $r'=(x's'-t')/t'$
\end_inset

.
 By the definition of 
\begin_inset Formula $\delta_{x}$
\end_inset

 and 
\begin_inset Formula $\delta_{s}$
\end_inset

, we have 
\begin_inset Formula $\oms\delta_{x}+\omx\delta_{s}=\overline{\delta}_{\mu}=-\frac{t'}{32\lambda}\frac{\overline{g}}{\|\overline{g}\|_{2}}$
\end_inset

 and hence
\begin_inset Formula 
\begin{align}
\frac{x's'-t'}{t'}= & \frac{(x+\delta_{x})(s+\delta_{s})-t'}{t'}=\frac{xs+s\delta_{x}+x\delta_{s}+\delta_{x}\delta_{s}-t'}{t'}\nonumber \\
= & \frac{xs-t'+\os\delta_{x}+\ox\delta_{s}+(s-\os)\delta_{x}+(x-\ox)\delta_{s}+\delta_{x}\delta_{s}}{t'}\nonumber \\
= & \frac{xs-t}{t}-\frac{1}{32\lambda}\cdot\frac{\overline{g}}{\|\overline{g}\|_{2}}+\eta\label{eq:IPM_robust_r_diff}
\end{align}

\end_inset

where the error term
\begin_inset Formula 
\[
\eta=(\frac{t}{t'}-1)\frac{xs}{t}+\frac{(s-\os)\delta_{x}+(x-\ox)\delta_{s}+\delta_{x}\delta_{s}}{t'}.
\]

\end_inset

Now, we bound the error term 
\begin_inset Formula $\eta$
\end_inset

.
 Using Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:RobustIPM_basic"

\end_inset

 (
\begin_inset Formula $\|\delta_{x}/x\|_{2}\leq\frac{1}{16\lambda}$
\end_inset

, 
\begin_inset Formula $\|\delta_{s}/s\|_{2}\leq\frac{1}{16\lambda}$
\end_inset

, 
\begin_inset Formula $\|xs-t\|_{\infty}\leq\frac{t}{16}$
\end_inset

) and the definition of the algorithm (
\begin_inset Formula $\lambda\geq16$
\end_inset

, 
\begin_inset Formula $|t'-t|\leq\frac{t'}{128\lambda\sqrt{n}}\leq\frac{t}{128\lambda\sqrt{n}}$
\end_inset

, 
\begin_inset Formula $\|\ln\ox-\ln x\|_{\infty}\leq\frac{1}{48}$
\end_inset

, 
\begin_inset Formula $\|\ln\os-\ln s\|_{\infty}\leq\frac{1}{48}$
\end_inset

), we have
\begin_inset Formula 
\begin{align}
\|\eta\|_{2}\leq & |\frac{t}{t'}-1|\|\frac{xs}{t}\|_{\infty}\sqrt{n}+\|\frac{xs}{t'}\|_{\infty}\|\frac{s-\os}{s}\|_{\infty}\|\frac{\delta_{x}}{x}\|_{2}\nonumber \\
 & +\|\frac{xs}{t'}\|_{\infty}\|\frac{x-\ox}{x}\|_{\infty}\|\frac{\delta_{s}}{s}\|_{2}+\|\frac{xs}{t'}\|_{\infty}\|\frac{\delta_{x}}{x}\|_{2}\|\frac{\delta_{s}}{s}\|_{2}\nonumber \\
\leq & \frac{1}{128\lambda}\frac{17}{16}+\frac{9}{8}(e^{1/48}-1)(\frac{1}{16\lambda}+\frac{1}{16\lambda})+\frac{9}{8}(\frac{1}{16\lambda}\frac{1}{16\lambda})\leq\frac{1}{60\lambda}.\label{eq:robust_IPM_eta}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
In particular, we use 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:IPM_robust_r_diff"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:robust_IPM_eta"
plural "false"
caps "false"
noprefix "false"

\end_inset

 to get
\begin_inset Formula 
\[
\|r-r'\|_{2}\leq\frac{1}{32\lambda}+\|\eta\|_{2}\leq\frac{1}{16\lambda}.
\]

\end_inset

This proves the conclusion about 
\begin_inset Formula $r$
\end_inset

.
\end_layout

\begin_layout Proof
Case 1: 
\begin_inset Formula $\Phi(r)\leq8n$
\end_inset

.
 
\end_layout

\begin_layout Proof
The definition of 
\begin_inset Formula $\Phi$
\end_inset

 together with the fact 
\begin_inset Formula $\|r-r'\|_{2}\leq\frac{1}{16\lambda}$
\end_inset

 implies that 
\begin_inset Formula $\Phi(r')\leq\frac{3}{2}\Phi(r)\leq12n$
\end_inset

.
 
\end_layout

\begin_layout Proof
Case 2: 
\begin_inset Formula $\Phi(r)\geq8n$
\end_inset

.
\end_layout

\begin_layout Proof
Mean value theorem shows there is 
\begin_inset Formula $\widetilde{r}$
\end_inset

 between 
\begin_inset Formula $r$
\end_inset

 and 
\begin_inset Formula $r'$
\end_inset

 such that
\begin_inset Formula 
\[
\Phi(r')=\Phi(r)+\left\langle \nabla\Phi(\widetilde{r}),r'-r\right\rangle =\Phi(r)+\left\langle \nabla\Phi(\widetilde{r}),-\frac{1}{32\lambda}\frac{\overline{g}}{\|\overline{g}\|_{2}}+\eta\right\rangle 
\]

\end_inset

where we used 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:IPM_robust_r_diff"
plural "false"
caps "false"
noprefix "false"

\end_inset

 at the end.
 Using 
\begin_inset Formula $\|r-r'\|_{2}\leq\frac{1}{16\lambda}$
\end_inset

 and 
\begin_inset Formula $\|\overline{r}-r\|_{\infty}\leq\frac{1}{48\lambda}$
\end_inset

 (by assumption), we have 
\begin_inset Formula $\|\overline{r}-\widetilde{r}\|_{\infty}\leq\frac{1}{5\lambda}$
\end_inset

.
 Since 
\begin_inset Formula $\Phi(r)\geq8n$
\end_inset

, we have 
\begin_inset Formula $\Phi(\overline{r})\geq4n$
\end_inset

 and hence Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:robust_IPM_Phi"

\end_inset

 shows that
\begin_inset Formula 
\[
\|\nabla\Phi(\widetilde{r})-\nabla\Phi(\overline{r})\|_{2}\leq\frac{1}{3}\|\nabla\Phi(\overline{r})\|_{2}.
\]

\end_inset

Using 
\begin_inset Formula $\overline{g}=\nabla\Phi(\overline{r})$
\end_inset

 and letting 
\begin_inset Formula $\eta_{2}=\nabla\Phi(\widetilde{r})-\nabla\Phi(\overline{r})$
\end_inset

, we have
\begin_inset Formula 
\[
\Phi(r')-\Phi(r)=\left\langle \overline{g}+\eta_{2},-\frac{1}{32\lambda}\frac{\overline{g}}{\|\overline{g}\|_{2}}+\eta\right\rangle =-\frac{1}{32\lambda}\|\overline{g}\|_{2}-\frac{1}{32\lambda}\eta_{2}^{\top}\frac{\overline{g}}{\|\overline{g}\|_{2}}+\overline{g}^{\top}\eta+\eta_{2}^{\top}\eta.
\]

\end_inset

Using 
\begin_inset Formula $\|\eta_{2}\|_{2}\leq\frac{1}{3}\|\overline{g}\|_{2}$
\end_inset

 and 
\begin_inset Formula $\|\eta\|_{2}\leq\frac{1}{60\lambda}$
\end_inset

 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:robust_IPM_eta"
plural "false"
caps "false"
noprefix "false"

\end_inset

, we have
\begin_inset Formula 
\begin{align*}
\Phi(r')-\Phi(r) & \leq-\frac{1}{32\lambda}\|\overline{g}\|_{2}+\frac{1}{32\lambda}\cdot\frac{1}{3}\|\overline{g}\|_{2}+\|\overline{g}\|_{2}\cdot\frac{1}{60\lambda}+\frac{1}{3}\|\overline{g}\|_{2}\cdot\frac{1}{60\lambda}\leq-\frac{1}{720\lambda}\|\overline{g}\|_{2}
\end{align*}

\end_inset

Using Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:robust_IPM_Phi"

\end_inset

, we have 
\begin_inset Formula $\|\overline{g}\|_{2}\geq\frac{\lambda}{\sqrt{n}}(\Phi(\overline{r})-n)\geq3\lambda\sqrt{n}$
\end_inset

.
 Hence, we have
\begin_inset Formula 
\begin{equation}
\Phi(r')\leq\Phi(r)-\frac{\sqrt{n}}{240}<16n.\label{eq:IPM_robust_decrease}
\end{equation}

\end_inset

The potential actually decreases in this case.
 This proves the conclusion about 
\begin_inset Formula $\Phi$
\end_inset

.
\end_layout

\begin_layout Exercise
Show that we can use the potential function 
\begin_inset Formula $\Phi=\sum_{i=1}^{n}\exp(\lambda|v_{i}|)$
\end_inset

 to get a similar conclusion.
\end_layout

\begin_layout Subsection
Selecting 
\begin_inset Formula $\ox,\os$
\end_inset

 and 
\begin_inset Formula $\overline{r}$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:select_xsr"

\end_inset


\end_layout

\begin_layout Standard
Each step of the robust interior point method solves the linear system 
\begin_inset Formula 
\[
\left(\begin{array}{ccc}
\oms & \omx & \mzero\\
\ma & \mzero & \mzero\\
\mzero & \mi & \ma^{\top}
\end{array}\right)\left(\begin{array}{c}
\delta_{x}\\
\delta_{s}\\
\delta_{y}
\end{array}\right)=\left(\begin{array}{c}
\nabla\Phi(\overline{r})\\
0\\
0
\end{array}\right)
\]

\end_inset

for some vectors 
\begin_inset Formula $\ox,\os,\overline{r}$
\end_inset

 such that 
\begin_inset Formula $\|\ln\ox-\ln x\|_{\infty}\leq\frac{1}{48}$
\end_inset

, 
\begin_inset Formula $\|\ln\os-\ln s\|_{\infty}\leq\frac{1}{48}$
\end_inset

, 
\begin_inset Formula $\|\overline{r}-r\|_{\infty}\leq\frac{1}{48\lambda}$
\end_inset

.
 The key observation is that only a few coordinates of 
\begin_inset Formula $x,s$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 change significantly each step and hence we can maintain the solution of
 the linear system instead of computing from scratch.
 In this section, we discuss how to select 
\begin_inset Formula $\ox,\os,\overline{r}$
\end_inset

 with as few updates as possible while maintaining the invariants.
\end_layout

\begin_layout Standard
First, we observe that 
\begin_inset Formula $\ln x,\ln s$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 change by 
\begin_inset Formula $O(1)$
\end_inset

 in 
\begin_inset Formula $\ell_{2}$
\end_inset

 norm in each step.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:change_xsr"

\end_inset

Define 
\begin_inset Formula $x^{(k)},s^{(k)},r^{(k)}$
\end_inset

 according to Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:RobustStep"

\end_inset

.
 Then, 
\begin_inset Formula $\|\ln x^{(k+1)}-\ln x^{(k)}\|_{2}$
\end_inset

, 
\begin_inset Formula $\|\ln s^{(k+1)}-\ln s^{(k)}\|_{2}$
\end_inset

 and 
\begin_inset Formula $\|r^{(k+1)}-r^{(k)}\|_{2}$
\end_inset

 are all bounded by 
\begin_inset Formula $1/(8\lambda)$
\end_inset

.
\end_layout

\begin_layout Proof
Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Projection_property"

\end_inset

 shows that
\begin_inset Formula 
\begin{equation}
\|(x^{(k+1)}-x^{(k)})/x^{(k)}\|_{\mu^{(k)}}\leq\|\overline{\delta}_{\mu}/\mu^{(k)}\|_{\mu^{(k)}}\label{eq:robust_x_step}
\end{equation}

\end_inset

where 
\begin_inset Formula $\mu^{(k)}=\overline{x}^{(k)}\overline{s}^{(k)}$
\end_inset

 and 
\begin_inset Formula $\overline{x}^{(k)},\overline{s}^{(k)}$
\end_inset

 are the 
\begin_inset Formula $\ox,\os$
\end_inset

 used in the 
\begin_inset Formula $k$
\end_inset

-th step.
 
\end_layout

\begin_layout Proof
To bound 
\begin_inset Formula $\mu^{(k)}$
\end_inset

, Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:RobustStep"

\end_inset

 shows that the invariant 
\begin_inset Formula $\Phi(r^{(k)})\le16n$
\end_inset

 holds and hence Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:robust_IPM_Phi"

\end_inset

 shows that (recall 
\begin_inset Formula $\lambda=16\log40n$
\end_inset

):
\begin_inset Formula 
\[
\|(x^{(k)}s^{(k)}-t^{(k)})/t^{(k)}\|_{\infty}=\|r^{(k)}\|_{\infty}\leq\frac{\log32n}{\lambda}\leq\frac{1}{16}.
\]

\end_inset

 Together with the fact that 
\begin_inset Formula $\|\ln\ox^{(k)}-\ln x^{(k)}\|_{\infty}\leq\frac{1}{48}$
\end_inset

, 
\begin_inset Formula $\|\ln\os^{(k)}-\ln s^{(k)}\|_{\infty}\leq\frac{1}{48}$
\end_inset

, we have
\begin_inset Formula 
\[
\|\frac{\ox^{(k)}\os^{(k)}-t^{(k)}}{t^{(k)}}\|_{\infty}\leq\frac{1}{8}.
\]

\end_inset

Using this on 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:robust_x_step"
plural "false"
caps "false"
noprefix "false"

\end_inset

 gives 
\begin_inset Formula $\|(x^{(k+1)}-x^{(k)})/x^{(k)}\|_{2}\leq\frac{8}{7}\frac{1}{t^{(k)}}\|\overline{\delta}_{\mu}\|_{2}.$
\end_inset

 Using 
\begin_inset Formula $\overline{\delta}_{\mu}=-\frac{t'}{32\lambda}\frac{\overline{g}}{\|\overline{g}\|_{2}}$
\end_inset

, we have
\begin_inset Formula 
\[
\|(x^{(k+1)}-x^{(k)})/x^{(k)}\|_{2}\leq\frac{1}{28\lambda}.
\]

\end_inset

To translate the bound to 
\begin_inset Formula $\log$
\end_inset

 scale, we note that 
\begin_inset Formula $|\ln(1+t)-t|\leq2t$
\end_inset

 for all 
\begin_inset Formula $|t|\leq\frac{1}{2}$
\end_inset

 and hence
\begin_inset Formula 
\[
\|\ln x^{(k+1)}-\ln x^{(k)}\|_{2}=\|\ln(1+\frac{x^{(k+1)}-x^{(k)}}{x^{(k)}})\|_{2}\leq\frac{1}{14\lambda}.
\]

\end_inset


\end_layout

\begin_layout Proof
The bound for 
\begin_inset Formula $\|\ln s^{(k+1)}-\ln s^{(k)}\|_{2}$
\end_inset

 is similar.
\end_layout

\begin_layout Proof
The bound for 
\begin_inset Formula $\|r^{(k+1)}-r^{(k)}\|_{2}$
\end_inset

 follows from Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:RobustStep"

\end_inset

.
\end_layout

\begin_layout Standard
Now the question is how to select 
\begin_inset Formula $\ln\ox,\ln\os$
\end_inset

 and 
\begin_inset Formula $\overline{r}$
\end_inset

 such that they are close to 
\begin_inset Formula $\ln x,\ln s$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 in 
\begin_inset Formula $\ell_{\infty}$
\end_inset

 norm.
 If the cost of updating the inverse of a matrix is linear in the rank of
 the update, then we can simply update any coordinate of 
\begin_inset Formula $\ox,\os$
\end_inset

 and 
\begin_inset Formula $\overline{r}$
\end_inset

 whenever they violate the condition.
 However, due to fast matrix multiplication, the average cost (per rank)
 of update is lower when the rank of update is large.
 Therefore, it is beneficial to update coordinates preemptively.
 
\end_layout

\begin_layout Standard
Now we state the algorithm for selecting 
\begin_inset Formula $\ox,\os$
\end_inset

 and 
\begin_inset Formula $\overline{r}$
\end_inset

.
 This algorithm is a general algorithm for maintaining a vector 
\begin_inset Formula $\overline{v}$
\end_inset

 such that 
\begin_inset Formula $\|\overline{v}-v\|_{\infty}\leq\delta$
\end_inset

.
 For every 
\begin_inset Formula $2^{k}$
\end_inset

 steps, the algorithm updates the coordinate of the vector 
\begin_inset Formula $\overline{v}$
\end_inset

 if that coordinate has changed by more than 
\begin_inset Formula $\delta/(2\log n)$
\end_inset

 between this step and 
\begin_inset Formula $2^{k}$
\end_inset

 steps earlier.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm2e}[H]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{
\end_layout

\end_inset


\begin_inset Formula $\mathtt{SelectVector}(\overline{v},v^{(0)},v^{(1)},\cdots,v^{(k)},\delta)$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "alg:SelectVector"

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $I=\{\}$
\end_inset

 be the set of updating coordinates.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
For{
\end_layout

\end_inset


\begin_inset Formula $\ell=0,1,\cdots,\left\lceil \log n\right\rceil $
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
If{
\end_layout

\end_inset


\begin_inset Formula $k=0\mod2^{\ell}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uIf{
\end_layout

\end_inset


\begin_inset Formula $\ell=\left\lceil \log n\right\rceil $
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $I=[n]$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
Else{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $I=I\cup\{i:|v_{i}^{(k)}-v_{i}^{(k-2^{\ell})}|\geq\delta/(2\left\lceil \log n\right\rceil )\}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\overline{v}_{i}\leftarrow v_{i}^{(k)}$
\end_inset

 for all 
\begin_inset Formula $i\in I$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Return
\series default
 
\begin_inset Formula $\overline{v}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithm2e}
\end_layout

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:SelectVector"

\end_inset

Given vectors 
\begin_inset Formula $v^{(0)},v^{(1)},v^{(2)},\cdots$
\end_inset

 arriving in a stream, suppose that 
\begin_inset Formula $\|v^{(k+1)}-v^{(k)}\|_{2}\leq\beta$
\end_inset

 for all 
\begin_inset Formula $k$
\end_inset

.
 For any 
\begin_inset Formula $\frac{1}{2}>\delta>0$
\end_inset

, define the vector 
\begin_inset Formula $\overline{v}^{(0)}=v^{(0)}$
\end_inset

 and 
\begin_inset Formula $\overline{v}^{(k)}=\mathtt{SelectVector}(\overline{v}^{(k-1)},v^{(0)},v^{(1)},\cdots,v^{(k)},\delta)$
\end_inset

.
 Then, we have that
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\|\overline{v}^{(k)}-v^{(k)}\|_{\infty}\leq\delta$
\end_inset

 for all 
\begin_inset Formula $k$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\|\overline{v}^{(k)}-\overline{v}^{(k-1)}\|_{0}\leq O(\min(2^{2\ell_{k}}(\beta/\delta)^{2}\log^{2}n,n))$
\end_inset

 where 
\begin_inset Formula $\ell_{k}$
\end_inset

 is the largest integer 
\begin_inset Formula $\ell$
\end_inset

 with 
\begin_inset Formula $k=0\mod2^{\ell}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Proof
For bounding the error, we first fix some coordinate 
\begin_inset Formula $i\in[n]$
\end_inset

.
 Let 
\begin_inset Formula $k'$
\end_inset

 be the iteration when 
\begin_inset Formula $\overline{v}_{i}$
\end_inset

 was last updated, namely, 
\begin_inset Formula $\overline{v}_{i}^{(k)}=\overline{v}_{i}^{(k')}=v_{i}^{(k')}$
\end_inset

.
 Since we set 
\begin_inset Formula $\overline{v}\leftarrow v$
\end_inset

 every 
\begin_inset Formula $2^{\left\lceil \log n\right\rceil }$
\end_inset

 steps, we have 
\begin_inset Formula $k-2^{\left\lceil \log n\right\rceil }\leq k'<k$
\end_inset

.
 We can write 
\begin_inset Formula $k'=k_{0}<k_{1}<k_{2}<\cdots<k_{s}=k$
\end_inset

 such that 
\begin_inset Formula $k_{i+1}-k_{i}$
\end_inset

 is a power of 
\begin_inset Formula $2$
\end_inset

 and 
\begin_inset Formula $k_{i+1}-k_{i}$
\end_inset

 divides 
\begin_inset Formula $k_{i+1}$
\end_inset

 with 
\begin_inset Formula $|s|\leq2\left\lceil \log n\right\rceil $
\end_inset

.
 Hence, we have that
\begin_inset Formula 
\[
v_{i}^{(k)}-\overline{v}_{i}^{(k)}=v_{i}^{(k_{s})}-v_{i}^{(k_{0})}=\sum_{j=0}^{s-1}(v_{i}^{(k_{j+1})}-v_{i}^{(k_{j})}).
\]

\end_inset

Since 
\begin_inset Formula $\overline{v}_{i}$
\end_inset

 is not updated since step 
\begin_inset Formula $k'$
\end_inset

, we have 
\begin_inset Formula $|v_{i}^{(k_{j+1})}-v_{i}^{(k_{j})}|\leq\delta/(2\left\lceil \log n\right\rceil )$
\end_inset

 and hence 
\begin_inset Formula $|v_{i}^{(k)}-\overline{v}_{i}^{(k)}|\leq\delta$
\end_inset

.
 Since this holds for every 
\begin_inset Formula $i$
\end_inset

, we have that 
\begin_inset Formula $\|\overline{v}^{(k)}-v^{(k)}\|_{\infty}\leq\delta$
\end_inset

.
\end_layout

\begin_layout Proof
For the sparsity of 
\begin_inset Formula $\overline{v}^{(k+1)}-\overline{v}^{(k)}$
\end_inset

, we first bound the size of the set 
\begin_inset Formula $I_{\ell}\defeq\{i:|v_{i}^{(k)}-v_{i}^{(k-2^{\ell})}|\geq\delta/(2\left\lceil \log n\right\rceil )\}$
\end_inset

.
 Note that
\begin_inset Formula 
\[
|I_{\ell}|\cdot\frac{\delta^{2}}{5\log^{2}n}\leq\sum_{i=1}^{n}|v_{i}^{(k)}-v_{i}^{(k-2^{\ell})}|^{2}\leq2^{\ell}\sum_{i=1}^{n}\sum_{t=k-2^{\ell}}^{k-1}|v_{i}^{(t+1)}-v_{i}^{(t)}|^{2}\leq2^{2\ell}\beta^{2}
\]

\end_inset

where we used 
\begin_inset Formula $\|v^{(t+1)}-v^{(t)}\|_{2}\leq\beta$
\end_inset

 at the end.
 Hence, we have 
\begin_inset Formula $|I_{\ell}|=O(2^{2\ell}(\beta/\delta)^{2}\log^{2}n).$
\end_inset

 Hence, the total number of changes is bounded by 
\begin_inset Formula 
\[
|I|\leq\sum_{\ell=0}^{\ell_{k}}|I_{\ell}|=O(2^{2\ell_{k}}(\beta/\delta)^{2}\log^{2}n).
\]

\end_inset


\end_layout

\begin_layout Subsection
Framework
\begin_inset CommandInset label
LatexCommand label
name "subsec:framework"

\end_inset


\end_layout

\begin_layout Standard
In this section, we give the meta theorem by combining the algorithm 
\begin_inset Formula $\mathtt{RobustStep}$
\end_inset

 and 
\begin_inset Formula $\mathtt{SelectVector}$
\end_inset

.
 The algorithm is given in Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:FastRobustStep"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm2e}[H]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{
\end_layout

\end_inset


\begin_inset Formula $\mathtt{FastRobustStep}(\ma,x,s,t_{\mathrm{start}},t_{\mathrm{end}})$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "alg:FastRobustStep"

\end_inset


\end_layout

\begin_layout Standard

\series bold
Define
\series default
 
\begin_inset Formula $\Phi(r)$
\end_inset

 according to 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Phi_potential"
plural "false"
caps "false"
noprefix "false"

\end_inset

 with 
\begin_inset Formula $\lambda=16\log40n$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
Invariant:
\series default
 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $\Phi(r)\leq16n$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $t=t_{\mathrm{start}}$
\end_inset

, 
\begin_inset Formula $h=1/(128\lambda\sqrt{n})$
\end_inset

 and 
\begin_inset Formula $n$
\end_inset

 is the number of columns in 
\begin_inset Formula $\ma$
\end_inset

.
\end_layout

\begin_layout Standard
Set 
\begin_inset Formula $k\leftarrow0$
\end_inset

, 
\begin_inset Formula $x^{(0)}=\ox^{(0)}=x$
\end_inset

, 
\begin_inset Formula $s^{(0)}=\os^{(0)}=s$
\end_inset

, 
\begin_inset Formula $r^{(0)}=\overline{r}^{(0)}=\frac{xs-t}{t}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Repeat{
\end_layout

\end_inset


\begin_inset Formula $t\neq t_{\mathrm{end}}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $t^{(k+1)}=\max(t^{(k)}/(1+h),t_{\mathrm{end}})$
\end_inset

, 
\begin_inset Formula $\overline{\delta}_{\mu}=-\frac{t^{(k+1)}}{32\lambda}\frac{\overline{g}}{\|\overline{g}\|_{2}}$
\end_inset

, 
\begin_inset Formula $\overline{g}=\nabla\Phi(\overline{r}^{(k)})$
\end_inset

.
\end_layout

\begin_layout Standard
Find 
\begin_inset Formula $\delta_{x},\delta_{s}$
\end_inset

 such that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\oms^{(k)}\delta_{x}+\omx^{(k)}\delta_{s} & =\overline{\delta}_{\mu},\nonumber \\
\ma\delta_{x} & =0,\nonumber \\
\ma^{\top}\delta_{y}+\delta_{s} & =0.\label{eq:LP_newton_step_robust_fast}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Set 
\begin_inset Formula $x^{(k+1)}\leftarrow x^{(k)}+\delta_{x}$
\end_inset

, 
\begin_inset Formula $s^{(k+1)}\leftarrow s^{(k)}+\delta_{s}$
\end_inset

, 
\begin_inset Formula $r^{(k+1)}\leftarrow(x^{(k+1)}s^{(k+1)}-t)/t$
\end_inset

.
\begin_inset Note Note
status open

\begin_layout Plain Layout
<– This is the full/intended step
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\ln\overline{x}^{(k+1)}=\mathtt{SelectVector}(\ln\overline{x}^{(k)},\ln x^{(0)},\ln x^{(1)},\cdots,\ln x^{(k+1)},1/48)$
\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
<– This is what we actually do, right?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\ln\overline{s}^{(k+1)}=\mathtt{SelectVector}(\ln\overline{s}^{(k)},\ln s^{(0)},\ln s^{(1)},\cdots,\ln s^{(k+1)},1/48)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\overline{r}^{(k+1)}=\mathtt{SelectVector}(\overline{r}^{(k)},r^{(0)},r^{(1)},\cdots,r^{(k+1)},1/(48\lambda))$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Return
\series default
 
\begin_inset Formula $(x,s)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithm2e}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The intermediate variables 
\begin_inset Formula $x^{(k)},s^{(k)},\ox^{(k)},\os^{(k)}$
\end_inset

 can be stored using persistent
\begin_inset Note Note
status open

\begin_layout Plain Layout
what is this?
\end_layout

\end_inset

 data structures and the cost of 
\begin_inset Formula $\mathtt{SelectVector}$
\end_inset

 roughly depends on how many coordinates of 
\begin_inset Formula $x,s$
\end_inset

 are updated.
 Hence, the bottleneck of 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 solving the linear systems 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:LP_newton_step_robust_fast"

\end_inset

.
 The cost of solving a sequence of linear systems in general depends on
 the number of entries changed.
 Combining Lemmas we proved in the previous two subsections, we can prove
 the correctness of 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 and bound the number of entries changed.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:FastRobustStepMeta"

\end_inset

Suppose that the input satisfies 
\begin_inset Formula $(x,s)\in\PriR^{\circ}\times\DualR^{\circ}$
\end_inset

 and 
\begin_inset Formula $\Phi_{\mathrm{start}}\defeq\Phi((xs-t_{\mathrm{start}})/t_{\mathrm{start}})\leq16n$
\end_inset

.
 Using 
\begin_inset Formula $O(\sqrt{n}\log(t_{\mathrm{start}}/t_{\mathrm{end}}))$
\end_inset

, 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 outputs 
\begin_inset Formula $(x,s)$
\end_inset

 such that
\begin_inset Formula 
\[
\Phi((xs-/t_{\mathrm{end}})/t_{\mathrm{end}})\leq\max(\Phi_{\mathrm{start}},12n).
\]

\end_inset

Furthermore, in the 
\begin_inset Formula $k$
\end_inset

-th step, we have 
\begin_inset Formula 
\[
\|\overline{x}^{(k)}-\overline{x}^{(k-1)}\|_{0}+\|\overline{s}^{(k)}-\overline{s}^{(k-1)}\|_{0}+\|\overline{r}^{(k)}-\overline{r}^{(k-1)}\|_{0}\leq O(\min(2^{2\ell_{k}}\log^{2}n,n))
\]

\end_inset

where 
\begin_inset Formula $\ell_{k}$
\end_inset

 is the largest integer 
\begin_inset Formula $\ell$
\end_inset

 with 
\begin_inset Formula $k=0\mod2^{\ell}$
\end_inset

.
 
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 is a instantiation of 
\begin_inset Formula $\mathtt{RobustStep}$
\end_inset

, its output is analyzed in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:RobustStep"

\end_inset

.
 The sparsity guarantee of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $s$
\end_inset

 follows from Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:SelectVector"

\end_inset

 with 
\begin_inset Formula $\beta=\frac{1}{8\lambda}$
\end_inset

 (Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:change_xsr"

\end_inset

) and 
\begin_inset Formula $\delta\geq\frac{1}{48\lambda}$
\end_inset

.
\end_layout

\begin_layout Standard
As we see from Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:SolveLP_apx"

\end_inset

, we can solve a linear program by calling 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 (or 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

) twice and that 
\begin_inset Formula 
\[
\frac{t_{\mathrm{start}}}{t_{\mathrm{end}}}=\left(\frac{nR}{\delta r}\right)^{O(1)}
\]

\end_inset

for both calls.
 Hence, the total number of steps is bounded by
\begin_inset Formula 
\[
T=O(\sqrt{n}\log(\frac{nR}{\delta r}))
\]

\end_inset

and the number of entries changed is bounded by
\begin_inset Formula 
\[
\sum_{k=1}^{T}O(\min(2^{2\ell_{k}}\log^{2}n,n))=O(n\log n\cdot\log(\frac{nR}{\delta r})).
\]

\end_inset

Note that we need change at least 
\begin_inset Formula $n$
\end_inset

 entries to get an approximate solution.
 Hence, the number of changes is optimal up to a polylogarithmic factor.
 
\end_layout

\begin_layout Subsection
Inverse Maintenance
\begin_inset CommandInset label
LatexCommand label
name "subsec:IPM_Inverse_Maintenance"

\end_inset


\end_layout

\begin_layout Standard
In this section, we discuss how to maintain the solution of the linear system
 (Newton step) efficiently.
 There are many different ways on maintaining the solution depending on
 the structure of 
\begin_inset Formula $\ma$
\end_inset

.
 In this note, we consider the generic case that 
\begin_inset Formula $\ma$
\end_inset

 is an arbitrary matrix.
 Although both the matrix and the vector of the Newton step changes during
 the algorithm, we can simplify by moving the vector inside the matrix.
\end_layout

\begin_layout Fact
\begin_inset CommandInset label
LatexCommand label
name "fact:block-inverse"

\end_inset

For any invertible matrix 
\begin_inset Formula $\mm\in\R^{n\times n}$
\end_inset

 and any vector 
\begin_inset Formula $v\in\Rn$
\end_inset

, we have
\begin_inset Formula 
\[
\left[\begin{array}{cc}
\mm & v\\
0 & -1
\end{array}\right]^{-1}=\left[\begin{array}{cc}
\mm^{-1} & \mm^{-1}v\\
0 & -1
\end{array}\right].
\]

\end_inset


\end_layout

\begin_layout Standard
Hence, the question of maintaining the solution reduces to the problem of
 maintaining a column of the inverse of the matrix
\begin_inset Formula 
\begin{equation}
\mm_{\ox,\os,\overline{r}}\defeq\left(\begin{array}{cccc}
\oms & \omx & \mzero & \nabla\Phi(\overline{r})\\
\ma & \mzero & \mzero & 0\\
\mzero & \mi & \ma^{\top} & 0\\
0 & 0 & 0 & -1
\end{array}\right).\label{eq:M_xsr_def}
\end{equation}

\end_inset

When we update 
\begin_inset Formula $\ox,\os,\overline{r}$
\end_inset

 to 
\begin_inset Formula $\ox+\delta_{\ox},\os+\delta_{\os},\overline{r}+\delta_{\overline{r}}$
\end_inset

 with 
\begin_inset Formula $q$
\end_inset

 coordinates modified in total, there are only 
\begin_inset Formula $q$
\end_inset

 columns in 
\begin_inset Formula $\mm$
\end_inset

 that change.
 Hence, we can compute the update of the inverse of 
\begin_inset Formula $\mm$
\end_inset

 using the Woodbury matrix identity (Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Woodbury"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 The idea of using the Woodbury identity together with fast matrix multiplicatio
n goes back to Vaidya 
\begin_inset CommandInset citation
LatexCommand cite
key "vaidya1989speeding"
literal "false"

\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:maintain_inverse"

\end_inset

Given vectors 
\begin_inset Formula $\ox,\os,\overline{r}\in\R^{n}$
\end_inset

 and the update 
\begin_inset Formula $\delta_{\ox},\delta_{\os},\delta_{\overline{r}}\in\R^{n}$
\end_inset

.
 Let 
\begin_inset Formula $q=\|\delta_{\ox}\|_{0}+\|\delta_{\os}\|_{0}+\|\delta_{\overline{r}}\|_{0}$
\end_inset

 and 
\begin_inset Formula $T_{m,n,\ell}$
\end_inset

 be the cost of multiplying an 
\begin_inset Formula $m\times n$
\end_inset

 matrix with an 
\begin_inset Formula $n\times\ell$
\end_inset

 matrix.
 Then,
\end_layout

\begin_deeper
\begin_layout Itemize
Given 
\begin_inset Formula $\mm_{\ox,\os,\overline{r}}^{-1}$
\end_inset

, we can compute 
\begin_inset Formula $\mm_{\ox+\delta_{\ox},\os+\delta_{\os},\overline{r}+\delta_{\overline{r}}}^{-1}$
\end_inset

 in time 
\begin_inset Formula $O(T_{n,q,n})$
\end_inset

.
\end_layout

\begin_layout Itemize
Given 
\begin_inset Formula $\mm_{\ox,\os,\overline{r}}^{-1}$
\end_inset

 and 
\begin_inset Formula $\mm_{\ox,\os,\overline{r}}^{-1}b$
\end_inset

, we can compute 
\begin_inset Formula $\mm_{\ox+\delta_{\ox},\os+\delta_{\os},\overline{r}+\delta_{\overline{r}}}^{-1}b$
\end_inset

 in time 
\begin_inset Formula $O(T_{q,q,q}+nq)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
We write 
\begin_inset Formula $\mm_{0}=\mm_{\ox,\os,\overline{r}}$
\end_inset

 and 
\begin_inset Formula $\mm_{1}=\mm_{\ox+\delta_{\ox},\os+\delta_{\os},\overline{r}+\delta_{\overline{r}}}$
\end_inset

.
 Note that 
\begin_inset Formula $\mm_{1}$
\end_inset

 and 
\begin_inset Formula $\mm_{0}$
\end_inset

 are off by just 
\begin_inset Formula $q$
\end_inset

 entries.
 Hence, we can write
\begin_inset Formula 
\[
\mm_{1}=\mm_{0}+\mathbf{U}\mathbf{C}\mathbf{V}
\]

\end_inset

where 
\begin_inset Formula $\mathbf{U}$
\end_inset

 consists of 
\begin_inset Formula $q$
\end_inset

 columns of identity matrix, 
\begin_inset Formula $\mathbf{C}$
\end_inset

 is a 
\begin_inset Formula $q\times q$
\end_inset

 matrix and 
\begin_inset Formula $\mathbf{V}$
\end_inset

 consists of 
\begin_inset Formula $q$
\end_inset

 rows of identity matrix.
 Hence, the Woodbury matrix identity shows that
\begin_inset Formula 
\begin{equation}
\mm_{1}^{-1}=(\mm_{0}+\mathbf{U}\mathbf{C}\mathbf{V})^{-1}=\mm_{0}^{-1}-\mm_{0}^{-1}\mathbf{U}(\mathbf{C}^{-1}+\mathbf{V}\mm_{0}^{-1}\mathbf{U})^{-1}\mathbf{V}\mm_{0}^{-1}.\label{eq:Woodbury}
\end{equation}

\end_inset

Note that 
\begin_inset Formula $\mm_{0}^{-1}\mathbf{U}$
\end_inset

, 
\begin_inset Formula $\mathbf{V}\mm_{0}^{-1}\mathbf{U}$
\end_inset

, 
\begin_inset Formula $\mathbf{V}\mm_{0}^{-1}$
\end_inset

 are just blocks of 
\begin_inset Formula $\mm_{0}^{-1}$
\end_inset

 and no computation is needed.
 Hence, we can compute 
\begin_inset Formula $(\mathbf{C}^{-1}+\mathbf{V}\mm_{0}^{-1}\mathbf{U})^{-1}$
\end_inset

 in the time to invert two 
\begin_inset Formula $q\times q$
\end_inset

 matrices, which is 
\begin_inset Formula $O(T_{q,q,q})$
\end_inset

.
 The rest of the formula can be computed in 
\begin_inset Formula $O(T_{n,q,q}+T_{n,q,n})=O(T_{n,q,n})$
\end_inset

 time.
 In total, the runtime is 
\begin_inset Formula $O(T_{n,q,n})$
\end_inset

.
\end_layout

\begin_layout Proof
For computing 
\begin_inset Formula $\mm_{1}^{-1}b$
\end_inset

, we note that
\begin_inset Formula 
\[
\mm_{1}^{-1}b=\mm_{0}^{-1}b-\mm_{0}^{-1}\mathbf{U}(\mathbf{C}^{-1}+\mathbf{V}\mm_{0}^{-1}\mathbf{U})^{-1}\mathbf{V}\mm_{0}^{-1}b.
\]

\end_inset

Since 
\begin_inset Formula $\mm_{0}^{-1}b$
\end_inset

 is given, the above formula can be computed in 
\begin_inset Formula $O(T_{q,q,q}+nq)$
\end_inset

 time where the 
\begin_inset Formula $O(nq)$
\end_inset

 term comes from multiplying a 
\begin_inset Formula $q\times n$
\end_inset

 matrix with an 
\begin_inset Formula $n$
\end_inset

-vector and a 
\begin_inset Formula $n\times q$
\end_inset

 matrix with a 
\begin_inset Formula $q$
\end_inset

-vector.
\end_layout

\begin_layout Standard
To use the previous lemma, we use the following estimate for 
\begin_inset Formula $T_{n,r,n}$
\end_inset

.
\end_layout

\begin_layout Definition
The exponent of matrix multiplication 
\begin_inset Formula $\omega$
\end_inset

 is the infimum among all 
\begin_inset Formula $\omega\geq0$
\end_inset

 such that it takes 
\begin_inset Formula $n^{\omega+o(1)}$
\end_inset

 time to multiply an 
\begin_inset Formula $n\times n$
\end_inset

 matrix by an 
\begin_inset Formula $n\times n$
\end_inset

 matrix.
 The dual exponent of matrix multiplication 
\begin_inset Formula $\alpha$
\end_inset

 is the supremum among all 
\begin_inset Formula $\alpha\geq0$
\end_inset

 such that it takes 
\begin_inset Formula $n^{2+o(1)}$
\end_inset

 time to multiply an 
\begin_inset Formula $n\times n$
\end_inset

 matrix by an 
\begin_inset Formula $n\times n^{\alpha}$
\end_inset

 matrix.
 Currently, 
\begin_inset Formula $\omega\leq2.3729$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "coppersmith1987matrix,williams2012multiplying,le2014powers,alman2021refined"
literal "false"

\end_inset

 and 
\begin_inset Formula $\alpha\geq0.3138$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "le2014powers,gall2018improved"
literal "false"

\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:Tnnr_est"

\end_inset

For 
\begin_inset Formula $r\leq n$
\end_inset

, we have 
\begin_inset Formula $T_{n,r,n}=n^{2+o(1)}+n^{\omega-\frac{\omega-2}{1-\alpha}+o(1)}r^{\frac{\omega-2}{1-\alpha}}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm2e}[H]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{
\end_layout

\end_inset


\begin_inset Formula $\mathtt{InverseMaintenance}()$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Set 
\begin_inset Formula $k\leftarrow0$
\end_inset

 and 
\begin_inset Formula $\ell_{*}$
\end_inset

 such that 
\begin_inset Formula $2^{2\ell_{*}}=\Theta(\min(n^{\alpha},n^{2/3}))$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
While{
\end_layout

\end_inset

Not finished
\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Obtain
\series default
 the current 
\begin_inset Formula $\ox^{(k)},\os^{(k)},\overline{r}^{(k)}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uIf{
\end_layout

\end_inset


\begin_inset Formula $k=0\mod2^{\ell_{*}}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Update 
\begin_inset Formula $\mathbf{T}$
\end_inset

 to 
\begin_inset Formula $\mm_{\ox^{(k)},\os^{(k)},\overline{r}^{(k)}}^{-1}$
\end_inset

 using Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:maintain_inverse"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $u\leftarrow\mathbf{T}e_{2n+d+1}$
\end_inset

, 
\begin_inset Formula $v\leftarrow u$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
Else{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Update 
\begin_inset Formula $v$
\end_inset

 to 
\begin_inset Formula $\mm_{\ox^{(k)},\os^{(k)},\overline{r}^{(k)}}^{-1}e_{2n+d+1}$
\end_inset

 using vector 
\begin_inset Formula $u$
\end_inset

 and Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:maintain_inverse"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $k\leftarrow k+1$
\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $(\delta_{x},\delta_{s})$
\end_inset

 be the first 
\begin_inset Formula $2n$
\end_inset

 coordinates of 
\begin_inset Formula $v$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
Yield
\series default
 
\begin_inset Formula $(\delta_{x},\delta_{s})$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithm2e}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We note that in the algorithm above, we do not compute the inverse of 
\begin_inset Formula $\mm$
\end_inset

 in every iteration, which would be too expensive.
 Rather, we compute 
\begin_inset Formula $\mm^{-1}b$
\end_inset

 as needed by using the previously computed 
\begin_inset Formula $\mm^{-1}$
\end_inset

 (from possibly many iterations ago) with a low-rank update using the Woodbury
 formula that we maintain.
\end_layout

\begin_layout Standard
Combining the Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:maintain_inverse"

\end_inset

 with Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:SelectVector"

\end_inset

, we have the following guarantee.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:FastRobustStepTime"

\end_inset

Using 
\begin_inset Formula $\mathtt{InverseMaintenance}$
\end_inset

 to implement Line 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:LP_newton_step_robust_fast"

\end_inset

 of 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 (Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:FastRobustStep"

\end_inset

), 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 takes in total time 
\begin_inset Formula 
\[
O((n^{\omega+o(1)}+n^{2+1/6+o(1)}+n^{5/2-\alpha/2+o(1)})\log(t_{\mathrm{end}}/t_{\mathrm{start}})).
\]

\end_inset


\end_layout

\begin_layout Proof
The bottleneck of 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 is the time to update 
\begin_inset Formula $v$
\end_inset

 and 
\begin_inset Formula $\mathbf{T}$
\end_inset

.
 This depends on the number of coordinates updated in 
\begin_inset Formula $\ox,\os,\overline{r}$
\end_inset

.
 Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:change_xsr"

\end_inset

 shows that 
\begin_inset Formula $\ln x,\ln s$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 change by at most 
\begin_inset Formula $\alpha\defeq1/(8\lambda)$
\end_inset

 in 
\begin_inset Formula $\ell_{2}$
\end_inset

 norm per step.
 Since we set the error of 
\begin_inset Formula $\mathtt{SelectVector}$
\end_inset

 to be 
\begin_inset Formula $\delta\defeq1/(48\lambda)$
\end_inset

 (or larger), Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:SelectVector"

\end_inset

 shows that 
\begin_inset Formula $q_{k}\defeq O(2^{2\ell_{k}}\log^{2}n)$
\end_inset

 coordinates in 
\begin_inset Formula $\ox,\os,\overline{r}$
\end_inset

 are updated at the 
\begin_inset Formula $k$
\end_inset

-th step where 
\begin_inset Formula $\ell_{k}$
\end_inset

 is the largest integer 
\begin_inset Formula $\ell$
\end_inset

 with 
\begin_inset Formula $k=0\mod2^{\ell}$
\end_inset

.
 We can now bound all the computation costs as follows.
\end_layout

\begin_layout Proof

\series bold
Cost of updating 
\begin_inset Formula $v$
\end_inset


\series default
: We update 
\begin_inset Formula $u$
\end_inset

 whenever 
\begin_inset Formula $k=0\mod2^{\ell_{*}}$
\end_inset

.
 Within that 
\begin_inset Formula $2^{\ell_{*}}$
\end_inset

 steps, the number of coordinates updated in 
\begin_inset Formula $\ox,\os,\overline{r}$
\end_inset

 is bounded by
\begin_inset Formula 
\[
q\defeq\sum_{k=1}^{2^{\ell_{*}}-1}q_{k}=\sum_{k=1}^{2^{\ell_{*}}-1}O(2^{2\ell_{k}}\log^{2}n)=O(2^{2\ell_{*}}\log^{2}n).
\]

\end_inset

Therefore, 
\begin_inset Formula $\mm_{\ox^{(k)},\os^{(k)},\overline{r}^{(k)}}$
\end_inset

 and 
\begin_inset Formula $\mathbf{T}^{-1}$
\end_inset

 are off by at most 
\begin_inset Formula $q$
\end_inset

 coordinates.
 Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:maintain_inverse"

\end_inset

 shows that it takes 
\begin_inset Formula 
\[
O(T_{q,q,q}+nq)=\widetilde{\widetilde{O}}(2^{2\ell_{*}\omega}+n2^{2\ell_{*}})
\]

\end_inset

time to compute 
\begin_inset Formula $v=\mm_{\ox^{(k)},\os^{(k)},\overline{r}^{(k)}}^{-1}e_{2n+d+1}$
\end_inset

 using 
\begin_inset Formula $u=\mathbf{T}e_{2n+d+1}$
\end_inset

, where we used 
\begin_inset Formula $\widetilde{\widetilde{O}}$
\end_inset

 to omit 
\begin_inset Formula $n^{o(1)}$
\end_inset

 terms.
\end_layout

\begin_layout Proof

\series bold
Cost of updating 
\begin_inset Formula $\mathbf{T}$
\end_inset


\series default
: For the 
\begin_inset Formula $k$
\end_inset

-th step that updates 
\begin_inset Formula $\mathbf{T}$
\end_inset

, the number of coordinates updated in 
\begin_inset Formula $\ox,\os,\overline{r}$
\end_inset

 is bounded by 
\begin_inset Formula $q+O(2^{2\ell_{k}}\log^{2}n)=O(2^{2\ell_{k}}\log^{2}n)$
\end_inset

 where the first term is due to the delayed updates and the second term
 is due to the updates at that step.
 Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:maintain_inverse"

\end_inset

 shows that it takes 
\begin_inset Formula $\widetilde{\widetilde{O}}(T_{n,n,2^{2\ell_{k}}})$
\end_inset

 time to update 
\begin_inset Formula $\mathbf{T}.$
\end_inset

 Since 
\begin_inset Formula $2^{2\ell_{k}}$
\end_inset

 updates happen every 
\begin_inset Formula $2^{\ell_{k}}$
\end_inset

 iterations, the amortized cost is
\begin_inset Formula 
\begin{align*}
\widetilde{\widetilde{O}}(\sum_{\ell=\ell_{*}}^{\frac{1}{2}\log n}2^{-\ell}T_{n,n,2^{2\ell}}) & =\widetilde{\widetilde{O}}(\sum_{\ell=\ell_{*}}^{\frac{1}{2}\log n}(n^{\omega-\frac{\omega-2}{1-\alpha}}2^{2\ell\cdot\frac{\omega-2}{1-\alpha}-\ell}+n^{2}2^{-\ell}))\\
 & =\widetilde{\widetilde{O}}(\sum_{\ell=\ell_{*}}^{\frac{1}{2}\log n}n^{\omega-\frac{\omega-2}{1-\alpha}}2^{2\ell\cdot\frac{\omega-2}{1-\alpha}-\ell}+n^{2}2^{-\ell_{*}})
\end{align*}

\end_inset

where we used Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Tnnr_est"

\end_inset

.
 The sum above is dominated by either the term at 
\begin_inset Formula $\ell=\ell_{*}$
\end_inset

 or the term at 
\begin_inset Formula $\ell=\frac{1}{2}\log n$
\end_inset

.
 Hence, the amortized cost of updating 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is
\begin_inset Formula 
\[
\widetilde{\widetilde{O}}(n^{\omega-\frac{\omega-2}{1-\alpha}}2^{2\ell_{*}\cdot\frac{\omega-2}{1-\alpha}-\ell_{*}}+n^{\omega-\frac{1}{2}}+n^{2}2^{-\ell_{*}})=\widetilde{\widetilde{O}}(n^{\omega-\frac{1}{2}}+n^{2}2^{-\ell_{*}})
\]

\end_inset

where we used 
\begin_inset Formula $n^{\omega-\frac{\omega-2}{1-\alpha}}2^{2\ell_{*}\cdot\frac{\omega-2}{1-\alpha}}\leq n^{2}$
\end_inset

 since 
\begin_inset Formula $2^{2\ell_{*}}\leq n^{\alpha}$
\end_inset

.
\end_layout

\begin_layout Proof

\series bold
Cost of initializing 
\begin_inset Formula $\mathbf{T}$
\end_inset

 and 
\begin_inset Formula $u$
\end_inset


\series default
: 
\begin_inset Formula $\widetilde{\widetilde{O}}(n^{\omega})$
\end_inset

.
\end_layout

\begin_layout Proof
Since there are 
\begin_inset Formula $\sqrt{n}\log(t_{\mathrm{end}}/t_{\mathrm{start}})$
\end_inset

 steps, the total cost is
\begin_inset Formula 
\begin{align*}
 & \widetilde{\widetilde{O}}(n^{\omega}+\sqrt{n}\log(t_{\mathrm{end}}/t_{\mathrm{start}})(2^{2\ell_{*}\omega}+n2^{2\ell_{*}}+n^{\omega-\frac{1}{2}}+n^{2}2^{-\ell_{*}}))\\
= & \widetilde{\widetilde{O}}(\sqrt{n}\log(t_{\mathrm{end}}/t_{\mathrm{start}})(n2^{2\ell_{*}}+n^{\omega-\frac{1}{2}}+n^{2}2^{-\ell_{*}}))
\end{align*}

\end_inset

where we used 
\begin_inset Formula $2^{2\ell_{*}\omega}\leq n^{\alpha\omega}\leq n$
\end_inset

.
 Putting 
\begin_inset Formula $2^{2\ell_{*}}=\min(n^{\alpha},n^{2/3})$
\end_inset

, we have
\begin_inset Formula 
\[
\widetilde{\widetilde{O}}((n^{\omega}+n^{2+1/6}+n^{5/2-\alpha/2})\log(t_{\mathrm{end}}/t_{\mathrm{start}})).
\]

\end_inset


\end_layout

\begin_layout Standard
Following Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:SolveLP_apx"

\end_inset

, we can find the initial point by modifying the linear program and this
 gives the following theorem.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:RobustLPApproximate"

\end_inset

Consider a linear program 
\begin_inset Formula $\min_{\ma x=b,x\geq0}c^{\top}x$
\end_inset

 with 
\begin_inset Formula $n$
\end_inset

 variables and 
\begin_inset Formula $d$
\end_inset

 constraints.
 Assume the linear program has inner radius 
\begin_inset Formula $r$
\end_inset

, outer radius 
\begin_inset Formula $R$
\end_inset

 and Lipschitz constant 
\begin_inset Formula $L$
\end_inset

 (see Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:LP_para"

\end_inset

), we can find 
\begin_inset Formula $x$
\end_inset

 such that
\begin_inset Formula 
\begin{align*}
c^{\top}x & \leq\min_{\ma x=b,x\geq0}c^{\top}x+\delta LR,\\
\ma x & =b,\\
x & \geq0.
\end{align*}

\end_inset

in time
\begin_inset Formula 
\[
O((n^{\omega+o(1)}+n^{2+1/6+o(1)}+n^{5/2-\alpha/2+o(1)})\log(R/(\delta r))).
\]

\end_inset


\end_layout

\begin_layout Theorem
If we further assume that the solution 
\begin_inset Formula $x^{*}=\arg\min_{\ma x=b,x\geq0}c^{\top}x$
\end_inset

 is unique and that 
\begin_inset Formula $c^{\top}x\geq c^{\top}x^{*}+\eta LR$
\end_inset

 for any other vertex 
\begin_inset Formula $x$
\end_inset

 of 
\begin_inset Formula $\{\ma x=b,x\geq0\}$
\end_inset

 for some 
\begin_inset Formula $\eta>\delta\geq0$
\end_inset

, then we have that 
\begin_inset Formula $\|x-x^{*}\|_{2}\leq\frac{2\delta R}{\eta}$
\end_inset

.
\end_layout

\begin_layout Proof
The algorithm for find 
\begin_inset Formula $x$
\end_inset

 is the same as 
\begin_inset Formula $\mathtt{SlowSolveLP}$
\end_inset

 except that the function 
\begin_inset Formula $\mathtt{L2Step}$
\end_inset

 is replaced by the function 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

.
 The runtime of 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 is analyzed in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:FastRobustStepTime"

\end_inset

.
 Since 
\begin_inset Formula $\mathtt{FastRobustStep}$
\end_inset

 is a instantiation of 
\begin_inset Formula $\mathtt{RobustStep}$
\end_inset

, its output is analyzed in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:RobustStep"

\end_inset

.
\end_layout

\begin_layout Paragraph
Historical Note.
\end_layout

\begin_layout Standard
The interior-point method was pioneered by Karmarkar 
\begin_inset CommandInset citation
LatexCommand cite
key "Karmarkar84"
literal "false"

\end_inset

 and developed in beautiful ways (including 
\begin_inset CommandInset citation
LatexCommand cite
key "renegar1988polynomial,vaidya1989speeding,nesterov1994interior,nesterov2002riemannian,lee2014path,lee2015faster"
literal "false"

\end_inset

).
 This classical approach appeared to reach its limit of requiring the solution
 of 
\begin_inset Formula $\sqrt{n}$
\end_inset

 linear systems until the paper of Cohen, Lee and Song 
\begin_inset CommandInset citation
LatexCommand cite
key "cohen2018solving"
literal "false"

\end_inset

 which reduced the complexity of approximate linear programming to 
\begin_inset Formula $n^{\omega+o(1)}\log(1/\epsilon)$
\end_inset

, by introducing the robust central path method.
 Using further insights, their algorithm was derandomized by van den Brand
 
\begin_inset CommandInset citation
LatexCommand cite
key "DBLP:conf/soda/Brand20"
literal "false"

\end_inset

.
 The technique has been extended in subsequent papers to other optimization
 problems 
\begin_inset CommandInset citation
LatexCommand cite
key "lee2019solving,jiang2020faster,BrandLSS20,jiang2021faster,van2021unifying,huang2021solving"
literal "false"

\end_inset

, and has also played a crucial role in faster algorithms for classical
 combinatorial optimization problems such as matchings and flows 
\begin_inset CommandInset citation
LatexCommand cite
key "BrandLNPSS20,BrandLLSSSW21,treeLP"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "ipm,main"
options "plain"

\end_inset


\end_layout

\begin_layout Section
\start_of_appendix
Finding a Point on the Central Path
\begin_inset CommandInset label
LatexCommand label
name "sec:IPM_interior"

\end_inset


\end_layout

\begin_layout Standard
We continue from the discussion in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:SolveLP_apx"

\end_inset

.
\end_layout

\begin_layout Standard
First, we show that 
\begin_inset Formula $x^{(0)}$
\end_inset

 defined in Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:IPM_interior"

\end_inset

 is indeed on the central path of the modified linear program.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:ipm_interior_modified"

\end_inset

The modified linear program (Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:IPM_interior_modified"

\end_inset

) has an explicit central path point 
\begin_inset Formula $x^{(0)}=(x_{c}^{+},x_{c}^{-},\overline{R})$
\end_inset

 at 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Proof
Recall that we say 
\begin_inset Formula $(x^{+},x^{-},x^{\theta})$
\end_inset

 is on the central path at 
\begin_inset Formula $t$
\end_inset

 if 
\begin_inset Formula $x^{+},x^{-},x^{\theta}$
\end_inset

 are positive and it satisfies the following equation
\begin_inset Formula 
\begin{align}
\ma x^{+}-\ma x^{-} & =b,\nonumber \\
\sum_{i=1}^{n}x_{i}^{+}+x^{\theta} & =\widetilde{b},\nonumber \\
\ma^{\top}y+\lambda+s^{+} & =c,\label{eq:KKT_modified_LP}\\
-\ma^{\top}y+s^{-} & =\widetilde{c},\nonumber \\
\lambda+s^{\theta} & =0,\nonumber 
\end{align}

\end_inset

for some 
\begin_inset Formula $s^{+},s^{-}\in\R_{>0}^{n}$
\end_inset

, 
\begin_inset Formula $s^{\theta}>0$
\end_inset

, 
\begin_inset Formula $y\in\R^{d}$
\end_inset

 and 
\begin_inset Formula $\lambda\in\R$
\end_inset

.
\end_layout

\begin_layout Proof
Now, we verify the solution 
\begin_inset Formula $x^{+}=\frac{t}{c+t/\overline{R}}$
\end_inset

, 
\begin_inset Formula $x^{-}=\frac{t}{c+t/\overline{R}}-x_{\circ}$
\end_inset

, 
\begin_inset Formula $x^{\theta}=\overline{R}$
\end_inset

, 
\begin_inset Formula $x_{\circ}=\ma^{\top}(\ma\ma^{\top})^{-1}b$
\end_inset

, 
\begin_inset Formula $y=0$
\end_inset

, 
\begin_inset Formula $s^{+}=\frac{t}{x^{+}}$
\end_inset

, 
\begin_inset Formula $s^{-}=\frac{t}{x^{-}}$
\end_inset

, 
\begin_inset Formula $s^{\theta}=\frac{t}{x^{\theta}}$
\end_inset

, 
\begin_inset Formula $\lambda=-s^{\theta}$
\end_inset

.
 Using 
\begin_inset Formula $\ma x_{\circ}=b$
\end_inset

, one can check it satisfies all the equality constraints above.
 
\end_layout

\begin_layout Proof
For the inequality constraints, using 
\begin_inset Formula $\|c\|_{\infty}\leq L$
\end_inset

 and 
\begin_inset Formula $t\geq8L\overline{R}$
\end_inset

, we have
\begin_inset Formula 
\begin{equation}
\frac{3}{4}\overline{R}\leq\frac{t}{L+t/\overline{R}}\leq x_{i}^{+}\leq\frac{t}{-L+t/\overline{R}}\leq\frac{3}{2}\overline{R}\label{eq:x_pos_bound}
\end{equation}

\end_inset

and hence 
\begin_inset Formula $x^{+}>0$
\end_inset

 and so is 
\begin_inset Formula $s^{+}$
\end_inset

.
 Since 
\begin_inset Formula $\|x_{\circ}\|_{2}\leq R\leq\frac{\overline{R}}{2}$
\end_inset

 and 
\begin_inset Formula $x_{i}^{+}\geq\frac{3}{4}\overline{R}$
\end_inset

 for all 
\begin_inset Formula $i$
\end_inset

, we have 
\begin_inset Formula $x_{i}^{-}\geq0$
\end_inset

 for all 
\begin_inset Formula $i$
\end_inset

.
 Hence, 
\begin_inset Formula $x^{-}$
\end_inset

 and 
\begin_inset Formula $s^{-}$
\end_inset

 are positive.
 Finally, 
\begin_inset Formula $x^{\theta}$
\end_inset

 and 
\begin_inset Formula $s^{\theta}$
\end_inset

 are positive.
 This proves that 
\begin_inset Formula $(\frac{t}{c+t/\overline{R}},\frac{t}{c+t/\overline{R}}-x_{\circ},\overline{R})$
\end_inset

 is on the central path point at 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Standard
Next, we show that the near-central-path point 
\begin_inset Formula $(x,s)$
\end_inset

 at 
\begin_inset Formula $t=LR$
\end_inset

 is far from the constraints 
\begin_inset Formula $x^{+}\geq0$
\end_inset

 and is close to the constraints 
\begin_inset Formula $x^{-}\geq0$
\end_inset

.
 The proof for both involves the same idea: use the optimality condition
 of 
\begin_inset Formula $x$
\end_inset

.
 Throughout the rest of the section, we are given 
\begin_inset Formula $(x,s)\in\mathcal{P}_{\overline{R},t}\times\mathcal{D}_{\overline{R},t}$
\end_inset

 such that 
\begin_inset Formula $\mu=xs$
\end_inset

 satisfies
\begin_inset Formula 
\[
\frac{5}{6}LR\leq\mu\leq\frac{7}{6}LR.
\]

\end_inset

We write 
\begin_inset Formula $\mu$
\end_inset

 into its three parts 
\begin_inset Formula $(\mu^{+},\mu^{-},\mu^{\theta})$
\end_inset

.
 By Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:primal_dual_representation"

\end_inset

, we have that 
\begin_inset Formula $x\defeq(x^{+},x^{-},x^{\theta})$
\end_inset

 minimizes the function
\begin_inset Formula 
\[
f(x^{+},x^{-},x^{\theta})\defeq c^{\top}x^{+}+\widetilde{c}^{\top}x^{-}-\sum_{i=1}^{n}\mu_{i}^{+}\log x_{i}^{+}-\sum_{i=1}^{n}\mu_{i}^{-}\log x_{i}^{-}-\mu^{\theta}\log x^{\theta}
\]

\end_inset

over the domain 
\begin_inset Formula $\mathcal{P}_{\overline{R},t}$
\end_inset

.
 The gradient of 
\begin_inset Formula $f$
\end_inset

 is a bit complicated.
 We avoid it by considering the directional derivative at 
\begin_inset Formula $x$
\end_inset

 along the direction 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $v-x$
\end_inset


\begin_inset Quotes erd
\end_inset

 where 
\begin_inset Formula $v$
\end_inset

 is the point such that 
\begin_inset Formula $\ma v=b$
\end_inset

 and 
\begin_inset Formula $v\geq r$
\end_inset

.
 Since our domain is in 
\begin_inset Formula $\mathcal{P}_{\overline{R},t}\subset\R^{2n+1}$
\end_inset

, we need to lift 
\begin_inset Formula $v$
\end_inset

 to higher dimension.
 So we define the point
\begin_inset Note Note
status open

\begin_layout Plain Layout
Why is this the natural choice? The 
\begin_inset Formula $v^{+}$
\end_inset

 and 
\begin_inset Formula $v^{\theta}$
\end_inset

 are natural.
 
\begin_inset Formula $v^{-}$
\end_inset

 is more like for technical reason
\end_layout

\end_inset


\begin_inset Formula 
\begin{align*}
v^{-} & =\min(x^{-},\frac{8L\overline{R}}{t}\cdot R),\\
v^{+} & =v+v^{-},\\
v^{\theta} & =\widetilde{b}-\sum_{i=1}^{n}v_{i}^{+}.
\end{align*}

\end_inset

First, we need to get some basic bounds on 
\begin_inset Formula $\widetilde{b}$
\end_inset

 and 
\begin_inset Formula $\widetilde{c}$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:ipm_propert_modified"

\end_inset

We have that 
\begin_inset Formula $\frac{3}{4}n\overline{R}\leq\widetilde{b}\leq3n\overline{R}$
\end_inset

 and 
\begin_inset Formula $\widetilde{c}_{i}\geq t/(2\overline{R})$
\end_inset

 for all 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Proof
By 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_pos_bound"
plural "false"
caps "false"
noprefix "false"

\end_inset

, we have 
\begin_inset Formula $\frac{3}{4}\overline{R}\leq x_{c,i}^{+}\leq\frac{3}{2}\overline{R}$
\end_inset

.
 By the definition of 
\begin_inset Formula $\widetilde{b}$
\end_inset

, we have
\begin_inset Formula 
\[
\widetilde{b}=\sum_{i=1}^{n}x_{c,i}^{+}+\overline{R}\leq\frac{3}{2}n\overline{R}+\overline{R}\leq3n\overline{R}.
\]

\end_inset

Similarly, we have 
\begin_inset Formula $\widetilde{b}=\sum_{i}x_{i}^{+}+\overline{R}\geq\frac{3}{4}n\overline{R}$
\end_inset

.
 
\end_layout

\begin_layout Proof
For the bound on 
\begin_inset Formula $\widetilde{c}$
\end_inset

, recall that 
\begin_inset Formula $\widetilde{c}=t/x_{c}^{-}$
\end_inset

 with 
\begin_inset Formula $x_{c}^{-}=x_{c}^{+}-x_{\circ}$
\end_inset

 and 
\begin_inset Formula $x_{\circ}=\ma^{\top}(\ma\ma^{\top})^{-1}b=\arg\min_{\ma x=b}\|x\|_{2}$
\end_inset

.
 Since we assumed the linear program has outer radius 
\begin_inset Formula $R$
\end_inset

, we have that 
\begin_inset Formula $\|x_{\circ}\|_{2}\leq R$
\end_inset

.
 Hence, 
\begin_inset Formula 
\[
x_{c,i}^{-}\leq\frac{3}{2}\overline{R}+R\leq2\overline{R}.
\]

\end_inset

Therefore, 
\begin_inset Formula $\widetilde{c}\geq t/(2\overline{R})$
\end_inset

.
\end_layout

\begin_layout Standard
The following lemma shows that 
\begin_inset Formula $(v^{+},v^{-},v^{\theta})\in\mathcal{P}_{\overline{R},t}$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:IPM_exact_inner_pt"

\end_inset

We have that 
\begin_inset Formula $(v^{+},v^{-},v^{\theta})\in\mathcal{P}_{\overline{R},t}$
\end_inset

.
 Furthermore, we have 
\begin_inset Formula $v^{\theta}\geq\frac{1}{2}n\overline{R}$
\end_inset

.
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $(v^{+},v^{-},v^{\theta})$
\end_inset

 satisfies the linear constraints of 
\begin_inset Formula $\mathcal{P}_{\overline{R},t}$
\end_inset

 by construction.
 It suffices to prove the vector is positive.
 Since 
\begin_inset Formula $x^{-}>0$
\end_inset

, we have 
\begin_inset Formula $v^{-}>0$
\end_inset

.
 Since 
\begin_inset Formula $v\geq r$
\end_inset

, we also have 
\begin_inset Formula $v^{+}>0$
\end_inset

.
 For 
\begin_inset Formula $v^{\theta}$
\end_inset

, we use 
\begin_inset Formula $\widetilde{b}\geq\frac{3}{4}n\overline{R}$
\end_inset

 (Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:ipm_propert_modified"

\end_inset

), 
\begin_inset Formula $v\leq R$
\end_inset

 and 
\begin_inset Formula $v^{-}\leq\frac{8L\overline{R}}{t}\cdot R\leq R$
\end_inset

 to get
\begin_inset Formula 
\begin{align*}
v^{\theta}=\widetilde{b}-\sum_{i=1}^{n}v_{i}^{+} & \geq\frac{3}{4}n\overline{R}-\sum_{i=1}^{n}(v_{i}+v_{i}^{-})\geq\frac{1}{2}n\overline{R}.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Next, we define the path 
\begin_inset Formula $p(t)=(1-t)(x^{+},x^{-},x^{\theta})+t(v^{+},v^{-},v^{\theta})$
\end_inset

.
 Since 
\begin_inset Formula $p(0)$
\end_inset

 minimizes 
\begin_inset Formula $f$
\end_inset

, we have that 
\begin_inset Formula $\frac{d}{dt}f(p(t))|_{t=0}\geq0$
\end_inset

.
 In particular, we have
\begin_inset Formula 
\begin{align}
0 & \leq\frac{d}{dt}f(p(t))|_{t=0}\nonumber \\
 & =c^{\top}(v^{+}-x^{+})+\widetilde{c}^{\top}(v^{-}-x^{-})-\sum_{i=1}^{n}\frac{\mu_{i}^{+}}{x_{i}^{+}}(v^{+}-x^{+})_{i}-\sum_{i=1}^{n}\frac{\mu_{i}^{-}}{x_{i}^{-}}(v^{-}-x^{-})_{i}-\frac{\mu^{\theta}}{x^{\theta}}(v_{\theta}-x^{\theta})\nonumber \\
 & =\frac{\mu^{\theta}}{x^{\theta}}(x^{\theta}-v_{\theta})+\sum_{i=1}^{n}(c_{i}-\frac{\mu_{i}^{+}}{x_{i}^{+}})(v^{+}-x^{+})_{i}+\sum_{i=1}^{n}(\widetilde{c}_{i}-\frac{\mu_{i}^{-}}{x_{i}^{-}})(v^{-}-x^{-})_{i}.\label{eq:LP_exact_3_term}
\end{align}

\end_inset

Now, we bound each term one by one.
 For the first term, we note that 
\begin_inset Formula 
\begin{equation}
\frac{\mu^{\theta}}{x^{\theta}}(x^{\theta}-v_{\theta})\leq\mu^{\theta}\leq2LR.\label{eq:LP_exact_3_term_1}
\end{equation}

\end_inset

For the second term in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LP_exact_3_term"
plural "false"
caps "false"
noprefix "false"

\end_inset

, we have the following
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:LP_exact_3_term_1"

\end_inset

We have that 
\begin_inset Formula $\sum_{i=1}^{n}(c_{i}-\frac{\mu_{i}^{+}}{x_{i}^{+}})(v^{+}-x^{+})_{i}\leq4nL\overline{R}-\frac{LRr}{2\min_{i}x_{i}^{+}}$
\end_inset

.
\end_layout

\begin_layout Proof
Note that
\begin_inset Formula 
\begin{align*}
\sum_{i=1}^{n}(c_{i}-\frac{\mu_{i}^{+}}{x_{i}^{+}})(v^{+}-x^{+})_{i} & =\sum_{i=1}^{n}(c_{i}v_{i}^{+}-\frac{\mu_{i}^{+}}{x_{i}^{+}}v_{i}^{+}-c_{i}x_{i}^{+}+\mu_{i}^{+})\\
 & \leq\sum_{i=1}^{n}c_{i}v_{i}^{+}+\sum_{i=1}^{n}\mu_{i}^{+}-\sum_{i=1}^{n}\frac{\mu_{i}^{+}}{x_{i}^{+}}v_{i}^{+}\\
 & \leq\|c\|_{\infty}\|v^{+}\|_{1}+2nLR-\frac{1}{2}\sum_{i=1}^{n}\frac{LRr}{x_{i}^{+}}
\end{align*}

\end_inset

where we used 
\begin_inset Formula $\mu_{i}^{+}\in[\frac{LR}{2},2LR]$
\end_inset

 and 
\begin_inset Formula $v_{i}^{+}\geq v_{i}\geq r$
\end_inset

 at the end.
 The result follows from 
\begin_inset Formula $\|c\|_{\infty}\leq L$
\end_inset

, 
\begin_inset Formula $\|v^{+}\|_{1}\leq\widetilde{b}\leq3n\overline{R}$
\end_inset

 (Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:ipm_propert_modified"

\end_inset

).
\end_layout

\begin_layout Standard
For the third term in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LP_exact_3_term"
plural "false"
caps "false"
noprefix "false"

\end_inset

, we have the following
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:LP_exact_3_term_2"

\end_inset

We have that 
\begin_inset Formula $\sum_{i=1}^{n}(\widetilde{c}_{i}-\frac{\mu_{i}^{-}}{x_{i}^{-}})(v^{-}-x^{-})_{i}\leq2LR-\frac{t}{4\overline{R}}\max_{i}x_{i}^{-}$
\end_inset

.
\end_layout

\begin_layout Proof
Using 
\begin_inset Formula $v^{-}=\min(x^{-},\frac{8L\overline{R}}{t}\cdot R)$
\end_inset

, we have 
\begin_inset Formula $v_{i}^{-}\leq x_{i}^{-}$
\end_inset

.
 We can ignore the terms with 
\begin_inset Formula $v_{i}^{-}=x_{i}^{-}$
\end_inset

.
 
\end_layout

\begin_layout Proof
For 
\begin_inset Formula $v_{i}^{-}<x_{i}^{-}$
\end_inset

, we have 
\begin_inset Formula $x_{i}^{-}\geq\frac{8L\overline{R}}{t}R$
\end_inset

.
 Using 
\begin_inset Formula $\widetilde{c}_{i}\geq\frac{t}{2\overline{R}}$
\end_inset

 (Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:ipm_propert_modified"

\end_inset

), we have
\begin_inset Formula 
\[
\widetilde{c}_{i}-\frac{\mu_{i}^{-}}{x_{i}^{-}}\geq\widetilde{c}_{i}-\frac{\mu_{i}^{-}}{\frac{8L\overline{R}}{t}R}\geq\widetilde{c}_{i}-\frac{2LR}{\frac{8L\overline{R}}{t}R}=\widetilde{c}_{i}-\frac{t}{4\overline{R}}\geq\frac{t}{4\overline{R}}.
\]

\end_inset

Hence, we have
\begin_inset Formula 
\[
\sum_{i=1}^{n}(\widetilde{c}_{i}-\frac{\mu_{i}^{-}}{x_{i}^{-}})(v^{-}-x^{-})_{i}\leq\frac{t}{4\overline{R}}\sum_{i=1}^{n}(v^{-}-x^{-})_{i}\leq\frac{t}{4\overline{R}}(\frac{8L\overline{R}}{t}\cdot R-\max_{i}x_{i}^{-}).
\]

\end_inset


\end_layout

\begin_layout Standard
Combining 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LP_exact_3_term"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LP_exact_3_term_1"
plural "false"
caps "false"
noprefix "false"

\end_inset

, Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:LP_exact_3_term_1"

\end_inset

 and Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:LP_exact_3_term_2"

\end_inset

, we have
\begin_inset Formula 
\begin{align*}
0 & \leq\frac{\mu^{\theta}}{x^{\theta}}(x^{\theta}-v_{\theta})+\sum_{i=1}^{n}(c_{i}-\frac{\mu_{i}^{+}}{x_{i}^{+}})(v^{+}-x^{+})_{i}+\sum_{i=1}^{n}(\widetilde{c}_{i}-\frac{\mu_{i}^{-}}{x_{i}^{-}})(v^{-}-x^{-})_{i}\\
 & \leq2LR+4nL\overline{R}-\frac{LRr}{2\min_{i}x_{i}^{+}}+2LR-\frac{t}{4\overline{R}}\max_{i}x_{i}^{-}\\
 & =5nL\overline{R}-\frac{LRr}{2\min_{i}x_{i}^{+}}-\frac{t}{4\overline{R}}\max_{i}x_{i}^{-}.
\end{align*}

\end_inset

Hence, we show that 
\begin_inset Formula $(x^{+},x^{-},x^{\theta})$
\end_inset

 is close to the central path at 
\begin_inset Formula $t=LR$
\end_inset

 implies that 
\begin_inset Formula $\min_{i}x_{i}^{+}$
\end_inset

 cannot be too small and 
\begin_inset Formula $\max_{i}x_{i}^{-}$
\end_inset

 cannot be too large
\begin_inset Formula 
\[
\frac{LRr}{2\min_{i}x_{i}^{+}}+\frac{t}{4\overline{R}}\max_{i}x_{i}^{-}\leq5nL\overline{R}.
\]

\end_inset

In particular, this shows the following:
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:LP_exact_distance_OPT"

\end_inset

We have that 
\begin_inset Formula $\min_{i}x_{i}^{+}\geq\frac{Rr}{10n\overline{R}}$
\end_inset

 and 
\begin_inset Formula $\max_{i}x_{i}^{-}\leq\frac{20nL\overline{R}}{t}\cdot\overline{R}$
\end_inset

.
\end_layout

\begin_layout Standard
Now, we are ready to prove the second conclusion of Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:IPM_interior"

\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:IPM_center_original"

\end_inset

For any primal 
\begin_inset Formula $x\defeq(x^{+},x^{-},x^{\theta})\in\mathcal{P}_{\overline{R},t}$
\end_inset

 and dual 
\begin_inset Formula $s\defeq(s^{+},s^{-},s^{\theta})\in\mathcal{D}_{\overline{R},t}$
\end_inset

 such that 
\begin_inset Formula $\frac{5}{6}LR\leq x_{i}s_{i}\leq\frac{7}{6}LR$
\end_inset

, we have that
\begin_inset Formula 
\[
(x^{+}-x^{-},s^{+}-s^{\theta})\in\PriR\times\DualR
\]

\end_inset

and that 
\begin_inset Formula $x_{i}^{-}\leq\epsilon x_{i}^{+}$
\end_inset

 and 
\begin_inset Formula $s^{\theta}\leq\epsilon s_{i}^{+}$
\end_inset

 for all 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Proof
First we check 
\begin_inset Formula $x\defeq x^{+}-x^{-}\in\PriR$
\end_inset

.
 By the choice of 
\begin_inset Formula $\overline{R}$
\end_inset

 and 
\begin_inset Formula $t$
\end_inset

, Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:LP_exact_distance_OPT"

\end_inset

 shows that 
\begin_inset Formula 
\[
\frac{\max_{i}x_{i}^{-}}{\min_{i}x_{i}^{+}}\leq\frac{\frac{20nL\overline{R}}{t}\cdot\overline{R}}{\frac{Rr}{10n\overline{R}}}=\frac{200n^{2}L\frac{\overline{R}^{3}}{Rr}}{t}\leq\epsilon.
\]

\end_inset

Hence, we have 
\begin_inset Formula $x^{+}-x^{-}>0$
\end_inset

 and that 
\begin_inset Formula $\ma(x^{+}-x^{-})=b$
\end_inset

.
 
\end_layout

\begin_layout Proof
Next, we check 
\begin_inset Formula $s\defeq s^{+}-s^{\theta}\in\DualR$
\end_inset

.
 Since 
\begin_inset Formula $x\in\mathcal{P}$
\end_inset

, we have 
\begin_inset Formula $x\leq R$
\end_inset

 and 
\begin_inset Formula $x_{i}^{+}\leq\frac{3}{2}x_{i}\leq\frac{3}{2}R$
\end_inset

.
 Since 
\begin_inset Formula $x_{i}^{+}s_{i}^{+}\geq\frac{5}{6}LR$
\end_inset

, we have 
\begin_inset Formula $s_{i}^{+}\geq\frac{1}{2}L.$
\end_inset

 On the other hand, we have 
\begin_inset Formula $x^{\theta}=\widetilde{b}-\sum_{i=1}^{n}x_{i}^{+}\geq\widetilde{b}-2nR\geq\frac{1}{2}n\overline{R}$
\end_inset

 (Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:ipm_propert_modified"

\end_inset

).
 Hence, 
\begin_inset Formula $s^{\theta}\leq\frac{\frac{7}{6}LR}{\frac{1}{2}n\overline{R}}\leq\frac{5LR}{2n\overline{R}}.$
\end_inset

 Combining both and the choice of 
\begin_inset Formula $\overline{R}$
\end_inset

, we have
\begin_inset Formula 
\[
\frac{s^{\theta}}{\min_{i}s_{i}^{+}}\leq\frac{\frac{5LR}{2n\overline{R}}}{L/2}=\frac{5R}{n\overline{R}}\leq\epsilon
\]

\end_inset

Hence, we have 
\begin_inset Formula $s=s^{+}-s^{\theta}>0$
\end_inset

 and that 
\begin_inset Formula $\ma^{\top}y+s=\ma^{\top}y+s^{+}-s^{\theta}=\ma^{\top}y+s^{+}+\lambda=c$
\end_inset

 (See 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:KKT_modified_LP"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
To ensure the reduction does not increase the complexity of solving linear
 system, we note that the linear constraint in the modified linear program
 is
\begin_inset Formula 
\[
\oma=\left[\begin{array}{ccc}
\ma & -\ma & 0\\
1 & 0 & 1
\end{array}\right]
\]

\end_inset

For any diagonal matrices 
\begin_inset Formula $\mw_{1},\mw_{2}$
\end_inset

 and any scalar 
\begin_inset Formula $\alpha$
\end_inset

, we have
\begin_inset Formula 
\[
\mh\defeq\oma\left[\begin{array}{ccc}
\mw_{1} & \mzero & 0\\
\mzero & \mw_{2} & 0\\
0 & 0 & \alpha
\end{array}\right]\oma^{\top}=\left[\begin{array}{cc}
\ma^{\top}(\mw_{1}+\mw_{2})\ma & \ma w_{1}\\
(\ma w_{1})^{\top} & \|w_{1}\|_{1}+\alpha
\end{array}\right].
\]

\end_inset

Note that the second row and second column block has size 
\begin_inset Formula $1$
\end_inset

.
 By the block inverse formula (Fact 
\begin_inset CommandInset ref
LatexCommand ref
reference "fact:block-inverse"
plural "false"
caps "false"
noprefix "false"

\end_inset

), 
\begin_inset Formula $\mh^{-1}v$
\end_inset

 is an explicit formula involving 
\begin_inset Formula $(\ma^{\top}(\mw_{1}+\mw_{2})\ma)^{-1}v_{1:n}$
\end_inset

 and 
\begin_inset Formula $(\ma^{\top}(\mw_{1}+\mw_{2})\ma)^{-1}\ma w_{1}$
\end_inset

.
 Hence, we can compute 
\begin_inset Formula $\mh^{-1}v$
\end_inset

 by solving two linear systems of the form 
\begin_inset Formula $\ma^{\top}\mw\ma$
\end_inset

 with some extra linear work.
\end_layout

\end_body
\end_document
